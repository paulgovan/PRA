[{"path":[]},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement paul.govan2@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://paulgovan.github.io/PRA/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://paulgovan.github.io/PRA/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 PRA authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/Bayes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bayesian Methods","text":"Bayesian inference statistical approach based Bayes’ theorem, describes update beliefs based new evidence. approach provides framework reasoning probabilities presence uncertainty. Bayes’ theorem states : P(H|E)=P(E|H)P(H)P(E) P(H | E) = \\frac{P(E | H) P(H)}{P(E)} : P(H|E)P(H | E) posterior probability hypothesis HH given evidence EE. P(E|H)P(E | H) likelihood observing evidence EE given hypothesis HH true. P(H)P(H) prior probability hypothesis HH observing evidence EE. P(E)P(E) probability evidence EE occurring. document explores Bayesian methods risk probability cost probability density estimation.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/Bayes.html","id":"inference-for-risk-probability","dir":"Articles","previous_headings":"","what":"Inference for Risk Probability","title":"Bayesian Methods","text":"Consider risk event RR may caused multiple root causes C1,C2,…,CnC_1, C_2, \\dots, C_n. probability RR occurring can computed : P(R)=∑=1nP(R|Ci)P(Ci)+P(R|¬Ci)P(¬Ci) P(R) = \\sum_{=1}^{n} P(R | C_i) P(C_i) + P(R | \\neg C_i) P(\\neg C_i) : P(R|Ci)P(R | C_i) represents probability RR occurring given CiC_i present. P(Ci)P(C_i) prior probability root cause CiC_i. P(R|¬Ci)P(R | \\neg C_i) probability RR occurring CiC_i absent. P(¬Ci)=1−P(Ci)P(\\neg C_i) = 1 - P(C_i) probability CiC_i occur. function risk_prob calculates probability risk event given root causes conditional probabilities.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/Bayes.html","id":"example","dir":"Articles","previous_headings":"Inference for Risk Probability","what":"Example","title":"Bayesian Methods","text":"First, load package: Suppose two root causes probabilities P(C1)=0.3P(C_1) = 0.3 P(C2)=0.2P(C_2) = 0.2. conditional probabilities risk event given cause P(R|C1)=0.8P(R | C_1) = 0.8 P(R|C2)=0.6P(R | C_2) = 0.6, respectively. conditional probabilities risk event given cause P(R|¬C1)=0.2P(R | \\neg C_1) = 0.2 P(R|¬C2)=0.4P(R | \\neg C_2) = 0.4. calculate probability risk event, use risk_prob function: 0.82","code":"library(PRA) cause_probs <- c(0.3, 0.2) risks_given_causes <- c(0.8, 0.6) risks_given_not_causes <- c(0.2, 0.4) risk_prob_value <- risk_prob(cause_probs, risks_given_causes, risks_given_not_causes) cat(risk_prob_value)"},{"path":"https://paulgovan.github.io/PRA/articles/Bayes.html","id":"inference-for-cost-probability-density","dir":"Articles","previous_headings":"Inference for Risk Probability","what":"Inference for Cost Probability Density","title":"Bayesian Methods","text":"cost_pdf function uses Bayesian inference model probability distribution cost outcomes based occurrence risk events. assumes risk event contributes total cost according normal distribution, leading mixture model representation: P()=∑=1nP(Ri)⋅N(|μi,σi)+P(¬Ri)⋅N(|base_cost,0) P() = \\sum_{=1}^{n} P(R_i) \\cdot N(| \\mu_i, \\sigma_i) + P(\\neg R_i) \\cdot N(| \\text{base_cost}, 0) : P(Ri)P(R_i) probability risk event RiR_i. N(|μi,σi)N(| \\mu_i, \\sigma_i) normal distribution mean μi\\mu_i standard deviation σi\\sigma_i. P(¬Ri)=1−P(Ri)P(\\neg R_i) = 1 - P(R_i) probability risk event RiR_i occur. N(|base_cost,0)N(| \\text{base_cost}, 0) point mass baseline cost base_cost\\text{base_cost}. function cost_pdf generates random samples mixture model estimate cost distribution.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/Bayes.html","id":"example-1","dir":"Articles","previous_headings":"","what":"Example","title":"Bayesian Methods","text":"Suppose three risk events probabilities P(R1)=0.3P(R_1) = 0.3, P(R2)=0.5P(R_2) = 0.5, P(R3)=0.2P(R_3) = 0.2. means standard deviations normal distributions cost given risk event : baseline cost base_cost=2000\\text{base_cost} = 2000. generate random samples cost distribution, use cost_pdf function:  histogram shows distribution cost outcomes based risk events associated costs.","code":"risk_probs <- c(0.3, 0.5, 0.2) means_given_risks <- c(10000, 15000, 5000) sds_given_risks <- c(2000, 1000, 1000) base_cost <- 2000 num_sims <- 1000 samples <- cost_pdf(num_sims, risk_probs, means_given_risks, sds_given_risks, base_cost) hist(samples, breaks = 30, col = \"skyblue\", main = \"Histogram of Cost\", xlab = \"Cost\")"},{"path":"https://paulgovan.github.io/PRA/articles/Bayes.html","id":"posterior-risk-probability","dir":"Articles","previous_headings":"","what":"Posterior Risk Probability","title":"Bayesian Methods","text":"Bayesian updating process updating prior beliefs given new evidence. risk_post_prob function calculates posterior probability risk event given observations root causes. achieved applying Bayes’ theorem update prior probabilities root causes based observed data.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/Bayes.html","id":"example-2","dir":"Articles","previous_headings":"Posterior Risk Probability","what":"Example","title":"Bayesian Methods","text":"Suppose two root causes prior probabilities P(C1)=0.3P(C_1) = 0.3 P(C2)=0.2P(C_2) = 0.2. conditional probabilities risk event given cause P(R|C1)=0.8P(R | C_1) = 0.8 P(R|C2)=0.6P(R | C_2) = 0.6, respectively. conditional probabilities risk event given cause P(R|¬C1)=0.2P(R | \\neg C_1) = 0.2 P(R|¬C2)=0.4P(R | \\neg C_2) = 0.4. Suppose observed root causes C1=1C_1 = 1 C2=NAC_2 = \\text{NA}. calculate posterior probability risk event, use risk_post_prob function: 0.6315789 posterior probability risk event updated based observed root causes.","code":"cause_probs <- c(0.3, 0.2) risks_given_causes <- c(0.8, 0.6) risks_given_not_causes <- c(0.2, 0.4) observed_causes <- c(1, NA) risk_post_prob <- risk_post_prob(cause_probs, risks_given_causes,   risks_given_not_causes, observed_causes) cat(risk_post_prob)"},{"path":"https://paulgovan.github.io/PRA/articles/Bayes.html","id":"posterior-cost-probability-density","dir":"Articles","previous_headings":"","what":"Posterior Cost Probability Density","title":"Bayesian Methods","text":"cost_post_pdf function generates posterior probability density function (PDF) costs, given observed risk events. function simulates random samples mixture model based Bayesian updating principles.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/Bayes.html","id":"example-3","dir":"Articles","previous_headings":"Posterior Cost Probability Density","what":"Example","title":"Bayesian Methods","text":"Suppose three risk events observed values R1=1R_1 = 1, R2=NAR_2 = \\text{NA}, R3=1R_3 = 1. means standard deviations normal distributions cost given risk event : baseline cost base_cost=2000\\text{base_cost} = 2000. generate random samples posterior cost distribution, use cost_post_pdf function:  histogram shows posterior probability density function costs based observed risk events.","code":"observed_risks <- c(1, NA, 1) means_given_risks <- c(10000, 15000, 5000) sds_given_risks <- c(2000, 1000, 1000) base_cost <- 2000 num_sims <- 1000 posterior_samples <- cost_post_pdf(   num_sims = num_sims,   observed_risks = observed_risks,   means_given_risks = means_given_risks,   sds_given_risks = sds_given_risks,   base_cost = base_cost )  hist(posterior_samples, breaks = 30, col = \"skyblue\", main = \"Posterior Cost PDF\", xlab = \"Cost\")"},{"path":"https://paulgovan.github.io/PRA/articles/Bayes.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Bayesian Methods","text":"Bayesian methods provide powerful framework updating beliefs making inferences based observed data. incorporating prior knowledge new evidence, methods can help quantify uncertainty make informed decisions wide range applications.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"steps-in-mc-simulation","dir":"Articles","previous_headings":"","what":"Steps in MC Simulation","title":"Monte Carlo Simulation","text":"Model Definition: Define project model, including objectives, timeline, variables affect project (e.g., costs, durations, resource availability). Identify Uncertainties: Identify uncertainties project. variability task durations, costs, critical factors. Assign Probability Distributions: uncertain variable, assign probability distribution. Common distributions include normal, triangular, uniform distributions, represent range possible values likelihood. Execute Simulation: Using random sampling, simulation runs numerous iterations (typically thousands). iteration, random values selected probability distributions uncertain variable, project’s outcomes calculated. Analyze Results: running simulation, analyze results understand range possible project outcomes. analysis includes statistical summaries like mean, median, standard deviation, percentiles, help understanding probability meeting project objectives uncertainty.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"applications-in-project-risk-analysis","dir":"Articles","previous_headings":"","what":"Applications in Project Risk Analysis:","title":"Monte Carlo Simulation","text":"Schedule Risk Analysis: Assessing likelihood completing project time. Cost Risk Analysis: Evaluating probability staying within budget. Performance Risk Analysis: Understanding likelihood achieving project performance goals.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"advantages","dir":"Articles","previous_headings":"","what":"Advantages:","title":"Monte Carlo Simulation","text":"Provides comprehensive view project risks impacts. Helps making informed decisions quantifying uncertainties. Enhances ability prepare various risk scenarios develop mitigation strategies. Monte Carlo simulation powerful tool project management, enabling project managers foresee potential issues plan accordingly improve chances project success.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Monte Carlo Simulation","text":"First, load package: Next, set number simulations describe probability distributions 3 work packages: , set correlation matrix 3 work packages: Finally, run simulation using mcs function: calculate mean total duration: Mean Total Duration: 38.62 calculate variance total duration: Variance Total Duration: 19.43 build histogram total duration:","code":"library(PRA) num_simulations <- 10000 task_distributions <- list(   list(type = \"normal\", mean = 10, sd = 2),  # Task A: Normal distribution   list(type = \"triangular\", a = 5, b = 10, c = 15),  # Task B: Triangular distribution   list(type = \"uniform\", min = 8, max = 12)  # Task C: Uniform distribution ) correlation_matrix <- matrix(c(   1, 0.5, 0.3,   0.5, 1, 0.4,   0.3, 0.4, 1 ), nrow = 3, byrow = TRUE) results <- mcs(num_simulations, task_distributions, correlation_matrix) cat(\"Mean Total Duration:\", round(results$total_mean, 2), \"\\n\") cat(\"Variance of Total Duration:\", round(results$total_variance, 2), \"\\n\") hist(results$total_distribution, breaks = 50, main = \"Total Project Duration\",       xlab = \"Total Duration\", col = \"skyblue\", border = \"white\")"},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"contingency","dir":"Articles","previous_headings":"","what":"Contingency","title":"Monte Carlo Simulation","text":"Cost Contingency: Identify cost associated specific confidence level. instance, want 90% confidence level project exceed budget, find cost 90th percentile cost distribution. Schedule Contingency: Similarly, identify duration desired confidence level. example, want 95% confidence level project completed time, find project duration 95th percentile schedule distribution.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"example","dir":"Articles","previous_headings":"Contingency","what":"Example","title":"Monte Carlo Simulation","text":"previous example, calculate contingency confidence level 95%: Contingency based 95th percentile: 7.21","code":"contingency <- contingency(results, phigh = 0.95, pbase = 0.50) cat(\"Contingency based on 95th percentile:\", round(contingency, 2))"},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"key-considerations","dir":"Articles","previous_headings":"Contingency","what":"Key Considerations","title":"Monte Carlo Simulation","text":"Confidence Levels: Higher confidence levels result larger contingencies reduce risk overruns. Risk Appetite: organization’s risk tolerance influence chosen confidence level. Data Quality: accuracy probability distributions input data significantly impacts reliability contingency estimate.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"sensitivity","dir":"Articles","previous_headings":"","what":"Sensitivity","title":"Monte Carlo Simulation","text":"Estimating sensitivity involves determining changes input variables impact output variables interest, project cost duration. Sensitivity analysis identifies critical factors influencing project’s outcomes, helping project managers focus managing key risks.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"types-of-sensitivity-analysis","dir":"Articles","previous_headings":"Sensitivity","what":"Types of Sensitivity Analysis","title":"Monte Carlo Simulation","text":"Correlation Coefficients: Calculate correlation coefficients input variable output variable. measures strength direction linear relationship input output. Regression Analysis: Perform regression analysis quantify impact input variable output. provides coefficients indicate much change output expected unit change input. Tornado Diagrams: Create tornado diagrams visually represent sensitivity output variable changes input variable. longer bar, greater impact input output.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"example-1","dir":"Articles","previous_headings":"Sensitivity","what":"Example","title":"Monte Carlo Simulation","text":"previous example, calculate sensitivity task: Build vertical barchart display results:","code":"sensitivity_results <- sensitivity(task_distributions, correlation_matrix) data <- data.frame(    Tasks = c('A', 'B', 'C'),    Sensitivity = sensitivity_results ) barplot(height=data$Sensitivity, names=data$Tasks, col='skyblue',          horiz=TRUE, main = \"Sensitivity Analysis\", xlab = 'Sensitivity', ylab = 'Tasks')"},{"path":"https://paulgovan.github.io/PRA/articles/MCS.html","id":"interpretation-and-action","dir":"Articles","previous_headings":"Sensitivity","what":"Interpretation and Action","title":"Monte Carlo Simulation","text":"Focus High-Impact Variables: Based sensitivity analysis, prioritize monitoring managing inputs highest impact (e.g., Task B example). Develop Mitigation Strategies: Implement risk mitigation strategies sensitive inputs reduce potential negative impact project. Inform Stakeholders: Communicate sensitivity findings stakeholders provide clear understanding project risks concentrated.","code":""},{"path":[]},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"identify-project-activities-and-risks","dir":"Articles","previous_headings":"Steps in the Second Moment Method","what":"1. Identify Project Activities and Risks","title":"Second Moment Method","text":"List activities involved project; Identify risks associated activity; Estimate mean (expected value) activity.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"determine-the-expected-duration-cost-or-other-metrics-for-each-activity-considering-the-identified-risks","dir":"Articles","previous_headings":"Steps in the Second Moment Method","what":"2. Determine the expected duration, cost, or other metrics for each activity considering the identified risks","title":"Second Moment Method","text":"expected value average outcome, calculated weighted sum possible outcomes, weights probabilities outcomes.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"estimate-variance-and-standard-deviation","dir":"Articles","previous_headings":"Steps in the Second Moment Method","what":"3. Estimate Variance and Standard Deviation","title":"Second Moment Method","text":"Calculate variance activity’s duration, cost, metrics. Variance measures spread possible outcomes around mean. standard deviation square root variance, providing measure uncertainty units original metric.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"aggregate-mean-and-variance","dir":"Articles","previous_headings":"Steps in the Second Moment Method","what":"4. Aggregate Mean and Variance","title":"Second Moment Method","text":"entire project, aggregate means activities get project’s overall expected duration, cost, etc. Aggregate variances get project’s overall variance. activities independent, total variance sum individual variances.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"assess-project-risk","dir":"Articles","previous_headings":"Steps in the Second Moment Method","what":"5. Assess Project Risk","title":"Second Moment Method","text":"Use overall mean variance assess project’s risk. larger variance indicates greater uncertainty risk. Calculate confidence intervals understand range within project outcomes likely fall. example, assuming normal distribution, approximately 95% outcomes fall within two standard deviations mean.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"correlation","dir":"Articles","previous_headings":"","what":"Correlation","title":"Second Moment Method","text":"accounting correlation tasks, total variance project calculated using individual variances covariances pair activities.","code":""},{"path":[]},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"expected-value-mean","dir":"Articles","previous_headings":"Formulation","what":"Expected Value (Mean):","title":"Second Moment Method","text":"given project activity ii, expected value (mean) duration, cost, metric XiX_i : E(Xi)=∑jPj⋅Xij E(X_i) = \\sum_{j} P_j \\cdot X_{ij} entire project, nn activities, total expected value E(X)E(X) : E(X)=∑=1nE(Xi) E(X) = \\sum_{=1}^{n} E(X_i)","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"variance","dir":"Articles","previous_headings":"Formulation","what":"Variance:","title":"Second Moment Method","text":"variance project activity ii : Var(Xi)=∑jPj⋅(Xij−E(Xi))2 Var(X_i) = \\sum_{j} P_j \\cdot (X_{ij} - E(X_i))^2","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"covariance","dir":"Articles","previous_headings":"Formulation","what":"Covariance:","title":"Second Moment Method","text":"covariance two activities XiX_i XjX_j : Cov(Xi,Xj)=∑kPk⋅(Xik−E(Xi))⋅(Xjk−E(Xj)) Cov(X_i, X_j) = \\sum_{k} P_k \\cdot (X_{ik} - E(X_i)) \\cdot (X_{jk} - E(X_j))","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"variance-with-correlation","dir":"Articles","previous_headings":"Formulation","what":"Variance with Correlation:","title":"Second Moment Method","text":"considering correlation activities, total variance Var(X)Var(X) project : Var(X)=∑=1nVar(Xi)+2∑=1n−1∑j=+1nCov(Xi,Xj) Var(X) = \\sum_{=1}^{n} Var(X_i) + 2 \\sum_{=1}^{n-1} \\sum_{j=+1}^{n} Cov(X_i, X_j)","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"correlation-coefficient","dir":"Articles","previous_headings":"Formulation","what":"Correlation Coefficient:","title":"Second Moment Method","text":"correlation coefficient ρij\\rho_{ij} activities ii jj : ρij=Cov(Xi,Xj)σ(Xi)⋅σ(Xj) \\rho_{ij} = \\frac{Cov(X_i, X_j)}{\\sigma(X_i) \\cdot \\sigma(X_j)}","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Second Moment Method","text":"First, load package: Set mean vector, variance vector, correlation matrix toy project: Use Second Moment Method estimate results project print results: Mean Total Cost 45 Variance around Total Cost 49.4","code":"library(PRA) mean <- c(10, 15, 20) var <- c(4, 9, 16) cor_mat <- matrix(c(   1, 0.5, 0.3,   0.5, 1, 0.4,   0.3, 0.4, 1 ), nrow = 3, byrow = TRUE) result <- smm(mean, var, cor_mat) cat(\"Mean Total Cost is \", round(result$total_mean, 2)) cat(\"Variance around the Total Cost is \", round(result$total_var, 2))"},{"path":[]},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"benefits","dir":"Articles","previous_headings":"Benefits and Limitations","what":"Benefits","title":"Second Moment Method","text":"Simplicity: method relatively straightforward easy understand. Quantitative Insight: Provides numerical estimate uncertainty risk.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/SMM.html","id":"limitations","dir":"Articles","previous_headings":"Benefits and Limitations","what":"Limitations","title":"Second Moment Method","text":"Normal Distribution Assumption: Often assumes outcomes normally distributed, may accurately represent real-world scenarios. Limited First Two Moments: Ignores higher-order moments skewness kurtosis, can also important risk analysis.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/evm.html","id":"key-components","dir":"Articles","previous_headings":"","what":"Key Components","title":"Earned Value Management","text":"Budget Completion (BAC): total budget project. Actual Cost (AC): actual cost incurred work performed activity specific time period. Planned Value (PV): authorized budget assigned scheduled work. PV=BAC*PlannedPercentCompletePV = BAC * PlannedPercentComplete Earned Value (EV): value work actually performed expressed terms approved budget work. EV=BAC*ActualPercentCompleteEV = BAC * ActualPercentComplete","code":""},{"path":"https://paulgovan.github.io/PRA/articles/evm.html","id":"common-evm-equations","dir":"Articles","previous_headings":"","what":"Common EVM Equations","title":"Earned Value Management","text":"Cost Variance (CV): Positive CV indicates budget negative CV indicates budget. CV=EV−ACCV = EV - AC Schedule Variance (SV): Positive SV indicates ahead schedule negative SV indicates behind schedule. SV=EV−PVSV = EV - PV Cost Performance Index (CPI): CPI > 1 indicates cost efficiency CPI < 1 indicates cost inefficiency. CPI=EVACCPI = \\frac{EV}{AC} Schedule Performance Index (SPI): SPI > 1 indicates schedule efficiency SPI < 1 indicates schedule inefficiency. SPI=EVPVSPI = \\frac{EV}{PV} Estimate Completion (EAC): EAC=BACCPIEAC = \\frac{BAC}{CPI}","code":""},{"path":"https://paulgovan.github.io/PRA/articles/evm.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Earned Value Management","text":"First, load package: set BAC, schedule, current time period toy project. Calculate PV print results: Planned Value (PV): 40000 Set actual % complete calculate EV: Earned Value (EV): 35000 Set actual costs current time period calculate AC date: Actual Cost (AC): 36000 Calculate SV CV print results: project behind schedule Schedule Variance (SV) -5000 project budget Cost Variance (CV) -1000 Calculate SPI CPI print results: project behind schedule Schedule Performance Index (SPI) 0.88 project budget Cost Performance Index (CPI) 0.97 Calculate EAC print results: Estimate Completion (EAC) 102857.1 Finally, create performance trend plot results:","code":"library(PRA) bac <- 100000 schedule <- c(0.1, 0.2, 0.4, 0.7, 1.0) time_period <- 3 pv <- pv(bac, schedule, time_period) cat(\"Planned Value (PV):\", pv, \"\\n\") actual_per_complete <- 0.35 ev <- ev(bac, actual_per_complete) cat(\"Earned Value (EV):\", ev, \"\\n\") actual_costs <- c(9000, 18000, 36000) ac <- ac(actual_costs, time_period) cat(\"Actual Cost (AC):\", ac, \"\\n\") sv <- sv(ev, pv) cat(\"The project is behind schedule because the Schedule Variance (SV) is\", sv, \"\\n\") cv <- cv(ev, ac) cat(\"The project is over budget because the Cost Variance (CV) is\", cv, \"\\n\") spi <- spi(ev, pv) cat(\"The project is behind schedule because the Schedule Performance Index (SPI) is\", round(spi, 2), \"\\n\") cpi <- cpi(ev, ac) cat(\"The project is over budget because the Cost Performance Index (CPI) is\", round(cpi, 2), \"\\n\") eac <- eac(bac, cpi) cat(\"The Estimate at Completion (EAC) is\", round(eac, 2), \"\\n\") # Calculate PV, AC, and EV for time periods 1 to 3 time_period <- c(1, 2, 3) actual_per_complete <- c(0.05, 0.15, 0.35) pv <- sapply(1:3, function(t) pv(bac, schedule, t)) ac <- actual_costs ev <- ev(bac, actual_per_complete)  # Create a data frame for easier plotting data <- data.frame(   time_period,   PV = pv,   AC = ac,   EV = ev )  # Plot PV, AC, and EV over time p <- ggplot2::ggplot(data, ggplot2::aes(x = time_period)) +   ggplot2::geom_line(ggplot2::aes(y = PV, color = 'PV'), size = 1) +   ggplot2::geom_line(ggplot2::aes(y = AC, color = 'AC'), size = 1) +   ggplot2::geom_line(ggplot2::aes(y = EV, color = 'EV'), size = 1) +   ggplot2::geom_hline(yintercept = bac, linetype = 'dashed', color = 'blue', size = 1, show.legend = TRUE) +   ggplot2::geom_hline(yintercept = eac, linetype = 'dotted', color = 'red', size = 1, show.legend = TRUE) +   ggplot2::labs(title = 'Earned Value',        x = 'Time Period',        y = 'Value',        color = 'Metric') +   ggplot2::xlim(1, 5) +   ggplot2::theme_minimal()  # Print the plot print(p)"},{"path":"https://paulgovan.github.io/PRA/articles/network.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bayesian Networks","text":"Bayesian networks type mathematical model represent dependencies uncertainties using probability theory graph structures. Bayesian network directed acyclic graph (DAG) nodes represent random variables edges represent dependencies variables. document explores Bayesian networks project risk analysis decision making.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/network.html","id":"project-risk-analysis","dir":"Articles","previous_headings":"","what":"Project Risk Analysis","title":"Bayesian Networks","text":"Suppose simple roadway project. project consists 8 tasks, specific duration cost. tasks follows: Roadway Tasks","code":"roadway_tasks <- data.frame(   ID = c(\"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\"),   Label = c(     \"Task-1\",     \"Task-2\",     \"Task-3\",     \"Task-4\",     \"Task-5\",      \"Task-6\",     \"Task-7\",     \"Task-8\"   ),   Task = c(     \"Survey and Site Assessment\",     \"Design and Planning\",     \"Permitting and Approvals\",     \"Excavation and Grading\",     \"Pavement Installation\",     \"Drainage and Utilities Installation\",     \"Signage and Markings\",     \"Final Inspection and Handover\"   ),    Project_ID = rep(\"P\", 8) )  knitr::kable(roadway_tasks, caption = \"Roadway Tasks\")"},{"path":"https://paulgovan.github.io/PRA/articles/network.html","id":"resources","dir":"Articles","previous_headings":"","what":"Resources","title":"Bayesian Networks","text":"project requires various resources complete tasks. resources include surveyors, engineers, regulatory support, heavy machinery, pavement related machinery, drainage material equipment, painters, traffic signs, road markers, inspectors, quality control support. resources allocated specific tasks based expertise availability. Roadway Resources","code":"roadway_resources <- data.frame(   ID = c(\"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"),   Label = c(     \"Resource-1\",     \"Resource-2\",     \"Resource-3\",     \"Resource-4\",     \"Resource-5\",     \"Resource-6\",     \"Resource-7\",     \"Resource-8\"   ),   Resource = c(     \"Surveyer\",     \"Engineer\",     \"Regulatory Support\",     \"Heavy Machinery\",     \"Pavement and Related Machinery\",     \"Drainage Material and Equipment\",     \"Painters, Traffic Signs, Road Markers\",     \"Inspectors and Quality Control Support\"   ),   Task_ID = c(\"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\"),   Task = c(     \"Survey and Site Assessment\",     \"Design and Planning\",     \"Permitting and Approvals\",     \"Excavation and Grading\",     \"Pavement Installation\",     \"Drainage and Utilities Installation\",     \"Signage and Markings\",     \"Final Inspection and Handover\"   ),   Mean = c(     10000,     20000,     3500,     35000,     100000,     25000,     6500,     2000   ),    SD = c(     2000,     5000,     1000,     10000,     20000,     5000,     1500,     500   ) )  knitr::kable(roadway_resources, caption = \"Roadway Resources\")"},{"path":"https://paulgovan.github.io/PRA/articles/network.html","id":"risks","dir":"Articles","previous_headings":"","what":"Risks","title":"Bayesian Networks","text":"project subject various risks may impact cost, duration, quality project. risks include delays permitting approvals, unforeseen site conditions, material price fluctuations, labor shortages, weather disruptions, equipment breakdowns, design changes, regulatory changes. risk event probability occurrence, impact project, root cause. Roadway Risks","code":"roadway_risks <- data.frame(   Risk_ID = c(\"A\", \"B\", \"C\"),   Name = c(     \"Risk-1\",     \"Risk-2\",     \"Risk-3\"   ),   Risk = c(     \"Delays in Permitting and Approvals\",     \"Unforeseen Site Conditions\",     \"Material Price Fluctuations\"   ),   Probability = c(     0.9,     0.95,     0.8   ),   Resource_ID = c(\"F\", \"G\", \"H\"),   Resource_Impacted = c(     \"Regulatory Support\",     \"Heavy Machinery\",     \"Pavement and Related Machinery\"   ),   Mean = c(     7000,     70000,     200000   ),   SD = c(     2000,     20000,     40000   ) )  knitr::kable(roadway_risks, caption = \"Roadway Risks\")"},{"path":"https://paulgovan.github.io/PRA/articles/network.html","id":"bayesian-network","dir":"Articles","previous_headings":"","what":"Bayesian Network","title":"Bayesian Networks","text":"model project risks dependencies, can create Bayesian network. Bayesian network represent relationships tasks, resources, risks project. network help us analyze impact risks project outcomes make informed decisions. First, need define nodes edges Bayesian network. nodes represent tasks, resources, risks project. Next, define edges nodes Bayesian network. edges represent dependencies nodes. , define distributions nodes Bayesian network. distributions represent probabilities outcomes node. Finally, create Bayesian network using nodes, edges, distributions defined . plot Bayesian network, can use igraph package. igraph package provides functions creating analyzing graph structures.","code":"nodes <- data.frame(  id = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\"),   label = c(     \"Risk-1\",     \"Risk-2\",     \"Risk-3\",     \"Resource-1\",     \"Resource-2\",     \"Resource-3\",     \"Resource-4\",     \"Resource-5\",     \"Resource-6\",     \"Resource-7\",     \"Resource-8\",     \"Task-1\",     \"Task-2\",     \"Task-3\",     \"Task-4\",     \"Task-5\",      \"Task-6\",     \"Task-7\",     \"Task-8\",     \"Project\"   ),   stringsAsFactors = FALSE  ) links <- data.frame(   source = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\"   ),   target = c(\"F\", \"G\", \"H\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"T\", \"T\", \"T\", \"T\", \"T\", \"T\", \"T\"   ),   stringsAsFactors = FALSE ) distributions <- list(   A = list(     type = \"discrete\",     values = c(1, 0),     probs = c(0.9, 0.1)   ),   B = list(     type = \"discrete\",     values = c(1, 0),     probs = c(0.95, 0.05)   ),   C = list(     type = \"discrete\",     values = c(1, 0),     probs = c(0.8, 0.2)   ),   D = list(     type = \"normal\",     mean = 10000,     sd = 2000   ),   E = list(     type = \"normal\",     mean = 20000,     sd = 5000   ),   F = list(     type = \"conditional\", condition = \"A\",     true_dist = list(       type = \"normal\",       mean = 7000,       sd = 2000     ),     false_dist = list(       type = \"normal\",       mean = 3500,       sd = 1000     )   ),   G = list(     type = \"conditional\", condition = \"B\",     true_dist = list(       type = \"normal\",       mean = 70000,       sd = 20000     ),     false_dist = list(       type = \"normal\",       mean = 35000,       sd = 10000     )   ),   H = list(     type = \"conditional\", condition = \"C\",     true_dist = list(       type = \"normal\",       mean = 200000,       sd = 40000     ),     false_dist = list(       type = \"normal\",       mean = 100000,       sd = 20000     )   ),   I = list(     type = \"normal\",     mean = 100000,     sd = 20000   ),   J = list(     type = \"normal\",     mean = 25000,     sd = 5000   ),   K = list(     type = \"normal\",     mean = 6500,     sd = 1500   ),   L = list(     type = \"aggregate\",     nodes = c(\"D\")   ),   M = list(     type = \"aggregate\",     nodes = c(\"E\")   ),   N = list(     type = \"aggregate\",     nodes = c(\"F\")   ),   O = list(     type = \"aggregate\",     nodes = c(\"G\")   ),   P = list(     type = \"aggregate\",     nodes = c(\"H\")   ),   Q = list(     type = \"aggregate\",     nodes = c(\"I\")   ),   R = list(     type = \"aggregate\",     nodes = c(\"J\")   ),   S = list(     type = \"aggregate\",     nodes = c(\"K\")   ),   T = list(     type = \"aggregate\",     nodes = c(\"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\")   ) ) library(PRA) graph <- prob_net(nodes, links, distributions = distributions) library(igraph) g <- graph_from_data_frame(graph$links, vertices = graph$nodes, directed = TRUE) plot(g, main = \"Bayesian Network\", vertex.label = graph$nodes$label,      vertex.size = 30, vertex.color = \"lightblue\", edge.arrow.size = 0.5,      edge.color = \"gray\", layout = layout_with_graphopt(g))"},{"path":"https://paulgovan.github.io/PRA/articles/network.html","id":"inference","dir":"Articles","previous_headings":"","what":"Inference","title":"Bayesian Networks","text":"analyze Bayesian network, can use probabilistic inference algorithms calculate probabilities different outcomes. probabilities can help us assess impact risks project outcomes make informed decisions. can use results estimate total project cost assess impact risks project outcomes.","code":"simulation_results <- prob_net_sim(graph, num_samples = 1000) hist <- hist(simulation_results$T, breaks = 50, plot = FALSE) plot(hist, main = \"Total Project Cost\", xlab = \"Project Cost\", col = \"skyblue\", border = \"white\")"},{"path":"https://paulgovan.github.io/PRA/articles/network.html","id":"learning","dir":"Articles","previous_headings":"","what":"Learning","title":"Bayesian Networks","text":"can also update probabilities risk events based new information expert judgment. updated probabilities can help us refine project risk analysis make better decisions. example, learn Risk 3 (material price fluctuations) occur, can update Bayesian network new probability. can compare updated results original results see changes risk probabilities affect project outcomes.","code":"updated_results <- prob_net_learn(graph, observations = list(C = \"No\"),                                   num_samples = 1000) hist <- hist(simulation_results$H, breaks = 50, plot = FALSE) hist2 <- hist(updated_results$H, breaks = 50, plot = FALSE) plot(hist, main = \"Pavement Cost\", xlab = \"Resource Cost\", col = \"skyblue\", border = \"white\") plot(hist2, col = \"blue\", border = \"white\", add = TRUE) legend(\"topright\", legend = c(\"Original\", \"Updated\"), fill = c(\"skyblue\", \"blue\"))"},{"path":"https://paulgovan.github.io/PRA/articles/network.html","id":"updating","dir":"Articles","previous_headings":"","what":"Updating","title":"Bayesian Networks","text":"can also update structure Bayesian network adding removing arcs nodes. can help us refine project risk analysis make better decisions. example, learn Risk 1 (delays permitting approvals) longer concern, can remove arc Risk 1 Resource 3 (Regulatory Support). can compare updated results original results see changes network structure affect project outcomes.","code":"remove_links <- data.frame(   source = c(\"A\"),   target = c(\"F\"),   stringsAsFactors = FALSE ) update_distributions <- list(   F = list(     type = \"normal\",     mean = 3500,      sd = 1000     ) ) updated_graph <- prob_net_update(graph, remove_links = remove_links,                                    update_distributions = update_distributions) updated_results <- prob_net_sim(updated_graph, num_samples = 1000) hist <- hist(simulation_results$F, breaks = 50, plot = FALSE) hist2 <- hist(updated_results$F, breaks = 50, plot = FALSE) plot(hist, main = \"Regulatory Support Cost\", xlab = \"Resource Cost\", col = \"skyblue\", border = \"white\") plot(hist2, col = \"blue\", border = \"white\", add = TRUE) legend(\"topright\", legend = c(\"Original\", \"Updated\"), fill = c(\"skyblue\", \"blue\"))"},{"path":"https://paulgovan.github.io/PRA/articles/network.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Bayesian Networks","text":"Bayesian networks powerful tools project risk analysis decision making. modeling dependencies uncertainties project, Bayesian networks can help project managers assess impact risks project outcomes make informed decisions. Bayesian network created document represents relationships tasks, resources, risks roadway project. network can used analyze impact risks project outcomes refine risk analysis based new information expert judgment.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/network2.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bayesian Networks Expanded","text":"Similar vignette Bayesian networks project risk analysis, use Bayesian Networks analyze project portfolio risks. Bayesian Networks probabilistic graphical models represent set variables conditional dependencies via directed acyclic graph (DAG). Bayesian Networks useful modeling complex systems making inferences relationships variables.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/network2.html","id":"project-portfolio-risk-analysis","dir":"Articles","previous_headings":"","what":"Project Portfolio Risk Analysis","title":"Bayesian Networks Expanded","text":"Suppose simple project portfolio. portfolio consists 3 civil engineering projects: construction roadway, small building construction, pedestrian bridge project. primary tasks projects follows. Project 1: Roadway Tasks Project 2: Building Tasks Project 3: Bridge Tasks","code":"roadway_tasks <- data.frame(   ID = c(\"AF\", \"AG\", \"AH\", \"AI\", \"AJ\", \"AK\", \"AL\", \"AM\"),   Label = c(     \"Task-1.1\",     \"Task-1.2\",     \"Task-1.3\",     \"Task-1.4\",     \"Task-1.5\",      \"Task-1.6\",     \"Task-1.7\",     \"Task-1.8\"   ),   Task = c(     \"Survey and Site Assessment\",     \"Design and Planning\",     \"Permitting and Approvals\",     \"Excavation and Grading\",     \"Pavement Installation\",     \"Drainage and Utilities Installation\",     \"Signage and Markings\",     \"Final Inspection and Handover\"   ),    Project_ID = rep(\"BF\", 8) )  knitr::kable(roadway_tasks, caption = \"Project 1: Roadway Tasks\") building_tasks <- data.frame(   ID = c(\"AN\", \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\"),   Label = c(     \"Task-2.1\",     \"Task-2.2\",     \"Task-2.3\",     \"Task-2.4\",     \"Task-2.5\",      \"Task-2.6\",     \"Task-2.7\",     \"Task-2.8\"   ),   Task = c(     \"Architectural Design\",     \"Structural Engineering\",     \"Regulatory Approvals\",     \"Foundation and Excavation\",     \"Framing and Structural Work\",     \"Plumbing, Electrical, and HVAC Install\",     \"Interior and Exterior Finishing\",     \"Final Inspection and Handover\"   ),   Project_ID = rep(\"BG\", 8) )  knitr::kable(building_tasks, caption = \"Project 2: Building Tasks\") bridge_tasks <- data.frame(   ID = c(\"AV\", \"AW\", \"AX\", \"AY\", \"AZ\", \"BA\", \"BB\", \"BC\", \"BD\", \"BE\"),   Label = c(     \"Task-3.1\",     \"Task-3.2\",     \"Task-3.3\",     \"Task-3.4\",     \"Task-3.5\",      \"Task-3.6\",     \"Task-3.7\",     \"Task-3.8\",     \"Task-3.9\",     \"Task-3.10\"   ),   Task = c(     \"Site Survey and Assessment\",     \"Environmental Impact Study\",     \"Concept Design and Planning\",     \"Structural Engineering and Analysis\",     \"Permitting and Approvals\",     \"Foundation and Pile Installation\",     \"Superstructure Construction\",     \"Decking and Surface Finishing\",     \"Inspection and Load Testing\",     \"Final Handover\"   ),    Project_ID = rep(\"BH\", 10) )  knitr::kable(bridge_tasks, caption = \"Project 3: Bridge Tasks\")"},{"path":"https://paulgovan.github.io/PRA/articles/network2.html","id":"resources","dir":"Articles","previous_headings":"","what":"Resources","title":"Bayesian Networks Expanded","text":"primary resources required projects follows. Project 1: Roadway Resources Project 2: Building Resources Project 3: Bridge Resources","code":"roadway_resources <- data.frame(   ID = c(\"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\"),   Label = c(     \"Resource-1.1\",     \"Resource-1.2\",     \"Resource-1.3\",     \"Resource-1.4\",     \"Resource-1.5\",     \"Resource-1.6\",     \"Resource-1.7\",     \"Resource-1.8\"   ),   Resource = c(     \"Surveyer\",     \"Engineer\",     \"Regulatory Support\",     \"Heavy Machinery\",     \"Pavement and Related Machinery\",     \"Drainage Material and Equipment\",     \"Painters, Traffic Signs, Road Markers\",     \"Inspectors and Quality Control Support\"   ),   Task_ID = c(\"AF\", \"AG\", \"AH\", \"AI\", \"AJ\", \"AK\", \"AL\", \"AM\"),   Task = c(     \"Survey and Site Assessment\",     \"Design and Planning\",     \"Permitting and Approvals\",     \"Excavation and Grading\",     \"Pavement Installation\",     \"Drainage and Utilities Installation\",     \"Signage and Markings\",     \"Final Inspection and Handover\"   ),   Mean = c(     10000,     20000,     3500,     35000,     100000,     25000,     6500,     2000   ),    SD = c(     2000,     5000,     1000,     10000,     20000,     5000,     1500,     500   ) )  knitr::kable(roadway_resources, caption = \"Project 1: Roadway Resources\") building_resources <- data.frame(   ID = c(\"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\"),   Label = c(     \"Resource-2.1\",     \"Resource-2.2\",     \"Resource-2.3\",     \"Resource-2.4\",     \"Resource-2.5\",     \"Resource-2.6\",     \"Resource-2.7\",     \"Resource-2.8\"   ),   Resource = c(     \"Architect\",     \"Structural Engineer\",     \"Regulatory Support\",     \"Heavy Machinery\",     \"Building Materials\",     \"Plumbers, Electricians\",     \"Painters, Interior Finishers\",     \"Inspector and Quality Control Support\"   ),   Task_ID = c(\"AN\", \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\"),   Task = c(     \"Architectural Design\",     \"Structural Engineering\",     \"Regulatory Approvals\",     \"Foundation and Excavation\",     \"Framing and Structural Work\",     \"Plumbing, Electrical, and HVAC Install\",     \"Interior and Exterior Finishing\",     \"Final Inspection and Handover\"   ),   Mean = c(     15000,     30000,     4000,     40000,     100000,     20000,     8000,     2500   ),   SD = c(     3000,     6000,     1000,     10000,     20000,     4000,     1500,     500   ) )  knitr::kable(building_resources, caption = \"Project 2: Building Resources\") bridge_resources <- data.frame(   ID = c(\"V\", \"W\", \"X\", \"Y\", \"Z\", \"AA\", \"AB\", \"AC\", \"AD\", \"AE\"),   Label = c(     \"Resource-3.1\",     \"Resource-3.2\",     \"Resource-3.3\",     \"Resource-3.4\",     \"Resource-3.5\",     \"Resource-3.6\",     \"Resource-3.7\",     \"Resource-3.8\",     \"Resource-3.9\",     \"Resource-3-10\"   ),   Resource = c(     \"Surveyor\",     \"Environmental Scientist\",     \"Civil Engineer\",     \"Structural Engineer\",     \"Regulatory Consulting\",     \"Heavy Machinery\",     \"Steel and Concrete Materials\",     \"Decking Materials\",     \"Inspector and Quality Control Support\",     \"Handover Team\"   ),   Task_ID = c(\"AV\", \"AW\", \"AX\", \"AY\", \"AZ\", \"BA\", \"BB\", \"BC\", \"BD\", \"BE\"),   Task = c(     \"Site Survey and Assessment\",     \"Environmental Impact Study\",     \"Concept Design and Planning\",     \"Structural Engineering and Analysis\",     \"Permitting and Approvals\",     \"Foundation and Pile Installation\",     \"Superstructure Construction\",     \"Decking and Surface Finishing\",     \"Inspection and Load Testing\",     \"Final Handover\"   ),   Mean = c(     10000,     20000,     30000,     40000,     5000,     50000,     100000,     20000,     5000,     10000   ),   SD = c(     2000,     4000,     6000,     8000,     1000,     10000,     20000,     4000,     1000,     2000   ) )  knitr::kable(bridge_resources, caption = \"Project 3: Bridge Resources\")"},{"path":"https://paulgovan.github.io/PRA/articles/network2.html","id":"risks","dir":"Articles","previous_headings":"","what":"Risks","title":"Bayesian Networks Expanded","text":"primary risks projects follows. Project 1: Roadway Risks Project 2: Building Risks Project 3: Bridge Risks Notice risks common across multiple projects. Key portfolo-level risks Regulatory Delays, Unforeseen Site Conditions, Material Price Volatility, Labor/Supply Disruptions.","code":"roadway_risks <- data.frame(   Risk_ID = c(\"A\", \"B\", \"C\"),   Name = c(     \"Risk-1\",     \"Risk-2\",     \"Risk-3\"   ),   Risk = c(     \"Delays in Permitting and Approvals\",     \"Unforeseen Site Conditions\",     \"Material Price Fluctuations\"   ),   Probability = c(     0.9,     0.95,     0.8   ),   Resource_ID = c(\"H\", \"I\", \"J\"),   Resource_Impacted = c(     \"Regulatory Support\",     \"Heavy Machinery\",     \"Pavement and Related Machinery\"   ),   Mean = c(     7000,     70000,     200000   ),   SD = c(     2000,     20000,     40000   ) )  knitr::kable(roadway_risks, caption = \"Project 1: Roadway Risks\") building_risks <- data.frame(   Risk_ID = c(\"A\", \"D\", \"C\"),   Name = c(     \"Risk-1\",     \"Risk-4\",     \"Risk-3\"   ),   Risk = c(     \"Delays in Permitting and Approvals\",     \"Labor Shortage or Skills Gap\",     \"Material Price Volatility\"   ),   Probability = c(     0.9,     0.9,     0.8   ),   Resource_ID = c(\"P\", \"S\", \"O\"),   Resource = c(     \"Regulatory Support\",     \"Plumbers, Electricians\",     \"Building Materials\"   ),   Mean = c(     8000,     40000,     60000   ),   SD = c(     2000,     8000,     12000   ) )  knitr::kable(building_risks, caption = \"Project 2: Building Risks\") bridge_risks <- data.frame(   Risk_ID = c(\"B\", \"D\", \"E\"),   Name = c(     \"Risk-2\",     \"Risk-4\",     \"Risk-5\"   ),   Risk = c(     \"Unforeseen Environmental Conditions\",     \"Labor Supply Disruptions\",     \"Structural Design Revisions\"   ),   Probabiliy = c(     0.95,     0.9,     0.95   ),   Resource_ID = c(\"W\", \"AD\", \"Y\"),   Resource = c(     \"Environmental Scientist\",     \"Inspector and Quality Control Support\",     \"Structural Engineer\"   ),   Mean = c(     40000,     10000,     80000   ),    SD = c(     9000,     2000,     16000   ) )  knitr::kable(bridge_risks, caption = \"Project 3: Bridge Risks\")"},{"path":"https://paulgovan.github.io/PRA/articles/network2.html","id":"bayesian-network","dir":"Articles","previous_headings":"","what":"Bayesian Network","title":"Bayesian Networks Expanded","text":"model project portfolio risks, use Bayesian Network. Bayesian Network represent dependencies projects, tasks, resources, risks. Bayesian Network help us understand relationships variables make inferences risks. First, need define nodes edges Bayesian network. nodes represent variables, edges represent dependencies variables. following code defines nodes edges Bayesian network. Next, define edges Bayesian network. following code defines edges Bayesian network. define distributions nodes. following code defines distributions nodes. Finally, define Bayesian network using nodes, edges, distributions. following code defines Bayesian network. plot Bayesian network, can use igraph package. igraph package provides functions creating analyzing graph structures. following code plots Bayesian network.  Bayesian network represents dependencies projects, tasks, resources, risks. Bayesian network helps us understand relationships variables make inferences risks.","code":"nodes <- data.frame(  id = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\",          \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"AA\", \"AB\",          \"AC\", \"AD\", \"AE\", \"AF\", \"AG\", \"AH\", \"AI\", \"AJ\", \"AK\", \"AL\", \"AM\", \"AN\",          \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\", \"AV\", \"AW\", \"AX\", \"AY\", \"AZ\",          \"BA\", \"BB\", \"BC\", \"BD\", \"BE\", \"BF\", \"BG\", \"BH\", \"BI\"),   label = c(     \"Risk-1\",     \"Risk-2\",     \"Risk-3\",     \"Risk-4\",     \"Risk-5\",     \"Resource-1.1\",     \"Resource-1.2\",     \"Resource-1.3\",     \"Resource-1.4\",     \"Resource-1.5\",     \"Resource-1.6\",     \"Resource-1.7\",     \"Resource-1.8\",     \"Resource-2.1\",     \"Resource-2.2\",     \"Resource-2.3\",     \"Resource-2.4\",     \"Resource-2.5\",     \"Resource-2.6\",     \"Resource-2.7\",     \"Resource-2.8\",     \"Resource-3.1\",     \"Resource-3.2\",     \"Resource-3.3\",     \"Resource-3.4\",     \"Resource-3.5\",     \"Resource-3.6\",     \"Resource-3.7\",     \"Resource-3.8\",     \"Resource-3.9\",     \"Resource-3-10\",     \"Task-1.1\",     \"Task-1.2\",     \"Task-1.3\",     \"Task-1.4\",     \"Task-1.5\",     \"Task-1.6\",     \"Task-1.7\",     \"Task-1.8\",     \"Task-2.1\",     \"Task-2.2\",     \"Task-2.3\",     \"Task-2.4\",     \"Task-2.5\",     \"Task-2.6\",     \"Task-2.7\",     \"Task-2.8\",     \"Task-3.1\",     \"Task-3.2\",     \"Task-3.3\",     \"Task-3.4\",     \"Task-3.5\",     \"Task-3.6\",     \"Task-3.7\",     \"Task-3.8\",     \"Task-3.9\",     \"Task-3.10\",     \"Project 1\",     \"Project 2\",     \"Project 3\",     \"Project Portfolio\"   ),   stringsAsFactors = FALSE  ) links <- data.frame(   source = c(\"A\", \"B\", \"C\", \"A\", \"D\", \"C\", \"B\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\",             \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\",             \"X\", \"Y\", \"Z\", \"AA\", \"AB\", \"AC\", \"AD\", \"AE\", \"AF\", \"AG\", \"AH\", \"AI\",             \"AJ\", \"AK\", \"AL\", \"AM\", \"AN\", \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\",            \"AV\", \"AW\", \"AX\", \"AY\", \"AZ\", \"BA\", \"BB\", \"BC\", \"BD\", \"BE\", \"BF\", \"BG\",            \"BH\"),   target = c(\"H\", \"I\", \"J\", \"P\", \"S\", \"O\", \"W\", \"AD\", \"Y\", \"AF\", \"AG\", \"AH\", \"AI\",           \"AJ\", \"AK\", \"AL\", \"AM\", \"AN\", \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\",           \"AV\", \"AW\", \"AX\", \"AY\", \"AZ\", \"BA\", \"BB\", \"BC\", \"BD\", \"BE\", \"BF\", \"BF\",          \"BF\", \"BF\", \"BF\", \"BF\", \"BF\", \"BF\", \"BG\", \"BG\", \"BG\", \"BG\", \"BG\", \"BG\",          \"BG\", \"BG\", \"BH\", \"BH\", \"BH\", \"BH\", \"BH\", \"BH\", \"BH\", \"BH\", \"BH\", \"BH\",          \"BI\", \"BI\", \"BI\") ) distributions <- list(   A = list(     type = \"discrete\",     values = c(1, 0),     probs = c(0.9, 0.1)   ),   B = list(     type = \"discrete\",     values = c(1, 0),     probs = c(0.95, 0.05)   ),   C = list(     type = \"discrete\",     values = c(1, 0),     probs = c(0.8, 0.2)   ),   D = list(     type = \"discrete\",     values = c(1, 0),     probs = c(0.9, 0.1)   ),   E = list(     type = \"discrete\",     values = c(1, 0),     probs = c(0.95, 0.05)   ),   F = list(     type = \"normal\",     mean = 10000,     sd = 2000   ),   G = list(     type = \"normal\",     mean = 20000,     sd = 5000   ),   H = list(     type = \"conditional\",     condition = c(\"A\"),     true_dist = list(       type = \"normal\",       mean = 7000,       sd = 2000     ),     false_dist = list(       type = \"normal\",       mean = 3500,       sd = 1000     )   ),   I = list(     type = \"conditional\",     condition = c(\"B\"),     true_dist = list(       type = \"normal\",       mean = 70000,       sd = 20000     ),     false_dist = list(       type = \"normal\",       mean = 35000,       sd = 10000     )   ),   J = list(     type = \"conditional\",     condition = c(\"C\"),     true_dist = list(       type = \"normal\",       mean = 100000,       sd = 40000     ),     false_dist = list(       type = \"normal\",       mean = 50000,       sd = 20000     )   ),   K = list(     type = \"normal\",     mean = 25000,     sd = 5000   ),   L = list(     type = \"normal\",     mean = 6500,     sd = 1500   ),   M = list(     type = \"normal\",     mean = 2000,     sd = 500   ),   N = list(     type = \"normal\",     mean = 15000,     sd = 3000   ),   O = list(     type = \"conditional\",     condition = c(\"C\"),     true_dist = list(       type = \"normal\",       mean = 8000,       sd = 2000     ),     false_dist = list(       type = \"normal\",       mean = 4000,       sd = 1000     )   ),   P = list(     type = \"conditional\",     condition = c(\"A\"),     true_dist = list(       type = \"normal\",       mean = 8000,       sd = 2000     ),     false_dist = list(       type = \"normal\",       mean = 4000,       sd = 1000     )   ),   Q = list(     type = \"normal\",     mean = 40000,     sd = 10000   ),   R = list(     type = \"normal\",     mean = 100000,     sd = 20000   ),   S = list(     type = \"conditional\",     condition = c(\"D\"),     true_dist = list(       type = \"normal\",       mean = 16000,       sd = 4000     ),     false_dist = list(       type = \"normal\",       mean = 8000,       sd = 2000     )   ),   T = list(     type = \"normal\",     mean = 8000,     sd = 1500   ),   U = list(     type = \"normal\",     mean = 2500,     sd = 500   ),   V = list(     type = \"normal\",     mean = 10000,     sd = 2000   ),   W = list(     type = \"conditional\",     condition = c(\"B\"),     true_dist = list(       type = \"normal\",       mean = 60000,       sd = 4000     ),     false_dist = list(       type = \"normal\",       mean = 30000,       sd = 2000     )   ),   X = list(     type = \"normal\",     mean = 30000,     sd = 6000   ),   Y = list(     type = \"conditional\",     condition = c(\"E\"),     true_dist = list(       type = \"normal\",       mean = 20000,       sd = 2000     ),     false_dist = list(       type = \"normal\",       mean = 10000,       sd = 1000     )   ),   Z = list(     type = \"normal\",     mean = 5000,     sd = 1000   ),   AA = list(     type = \"normal\",     mean = 50000,     sd = 10000   ),   AB = list(     type = \"normal\",     mean = 100000,     sd = 20000   ),   AC = list(     type = \"normal\",     mean = 20000,     sd = 4000   ),   AD = list(     type = \"conditional\",     condition = c(\"D\"),     true_dist = list(       type = \"normal\",       mean = 40000,       sd = 8000     ),     false_dist = list(       type = \"normal\",       mean = 20000,       sd = 4000     )   ),   AE = list(     type = \"normal\",     mean = 10000,     sd = 2000   ),   AF = list(     type = \"aggregate\",     nodes = c(\"F\")   ),   AG = list(     type = \"aggregate\",     nodes = c(\"G\")   ),   AH = list(     type = \"aggregate\",     nodes = c(\"H\")   ),   AI = list(     type = \"aggregate\",     nodes = c(\"I\")   ),   AJ = list(     type = \"aggregate\",     nodes = c(\"J\")   ),   AK = list(     type = \"aggregate\",     nodes = c(\"K\")   ),   AL = list(     type = \"aggregate\",     nodes = c(\"L\")   ),   AM = list(     type = \"aggregate\",     nodes = c(\"M\")   ),   AN = list(     type = \"aggregate\",     nodes = c(\"N\")   ),   AO = list(     type = \"aggregate\",     nodes = c(\"O\")   ),   AP = list(     type = \"aggregate\",     nodes = c(\"P\")   ),   AQ = list(     type = \"aggregate\",     nodes = c(\"Q\")   ),   AR = list(     type = \"aggregate\",     nodes = c(\"R\")   ),   AS = list(     type = \"aggregate\",     nodes = c(\"S\")   ),   AT = list(     type = \"aggregate\",     nodes = c(\"T\")   ),   AU = list(     type = \"aggregate\",     nodes = c(\"U\")   ),   AV = list(     type = \"aggregate\",     nodes = c(\"V\")   ),   AW = list(     type = \"aggregate\",     nodes = c(\"W\")   ),   AX = list(     type = \"aggregate\",     nodes = c(\"X\")   ),   AY = list(     type = \"aggregate\",     nodes = c(\"Y\")   ),   AZ = list(     type = \"aggregate\",     nodes = c(\"Z\")   ),   BA = list(     type = \"aggregate\",     nodes = c(\"AA\")   ),   BB = list(     type = \"aggregate\",     nodes = c(\"AB\")   ),   BC = list(     type = \"aggregate\",     nodes = c(\"AC\")   ),   BD = list(     type = \"aggregate\",     nodes = c(\"AD\")   ),   BE = list(     type = \"aggregate\",     nodes = c(\"AE\")   ),   BF = list(     type = \"aggregate\",     nodes = c(\"AF\", \"AG\", \"AH\", \"AI\", \"AJ\", \"AK\", \"AL\", \"AM\")   ),   BG = list(     type = \"aggregate\",     nodes = c(\"AN\", \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\")   ),   BH = list(     type = \"aggregate\",     nodes = c(\"AV\", \"AW\", \"AX\", \"AY\", \"AZ\", \"BA\", \"BB\", \"BC\", \"BD\", \"BE\")   ),   BI = list(     type = \"aggregate\",     nodes = c(\"BF\", \"BG\", \"BH\")   ) ) library(PRA) graph <- prob_net(nodes, links, distributions = distributions) library(igraph) g <- graph_from_data_frame(graph$links, vertices = graph$nodes, directed = TRUE) plot(g, main = \"Bayesian Network\", vertex.label = graph$nodes$label,      vertex.size = 5, vertex.color = \"lightblue\", edge.arrow.size = 0.5,      edge.color = \"gray\", layout = layout_with_fr)"},{"path":"https://paulgovan.github.io/PRA/articles/network2.html","id":"inference","dir":"Articles","previous_headings":"","what":"Inference","title":"Bayesian Networks Expanded","text":"make inferences risks, can use probabilistic inference. Probabilistic inference process estimating probability distribution variable given evidence variables. Probabilistic inference allows us make predictions risks based observed data. can use results estimate total project cost assess impact risks project outcomes.  histogram shows distribution total project cost. histogram helps us understand range possible project costs assess impact risks project outcomes.","code":"simulation_results <- prob_net_sim(graph, num_samples = 1000) hist <- hist(simulation_results$BI, breaks = 50, plot = FALSE) plot(hist, main = \"Total Project Portfolio Cost\", xlab = \"Project Cost\", col = \"skyblue\", border = \"white\")"},{"path":"https://paulgovan.github.io/PRA/articles/network2.html","id":"learning","dir":"Articles","previous_headings":"","what":"Learning","title":"Bayesian Networks Expanded","text":"Bayesian network can updated new data improve model’s accuracy. Learning updating Bayesian network involves updating distributions based new evidence. updated Bayesian network can used make accurate predictions risks. example, suppose new data Risk 2 occurred. can update Bayesian network new data. following code updates Bayesian network new data. can use updated results estimate total project cost assess impact risks project outcomes.","code":"updated_results <- prob_net_learn(graph, observations = list(B = \"Yes\"),                                   num_samples = 1000) hist <- hist(simulation_results$I, breaks = 50, plot = FALSE) hist2 <- hist(updated_results$I, breaks = 50, plot = FALSE) plot(hist, main = \"Heavy Machinery Resource Cost\", xlab = \"Resource Cost\",       col = \"skyblue\", border = \"white\") plot(hist2, col = \"blue\", border = \"white\", add = TRUE) legend(\"topright\", legend = c(\"Before Update\", \"After Update\"),         fill = c(\"skyblue\", \"blue\"), bty = \"n\")"},{"path":"https://paulgovan.github.io/PRA/articles/network2.html","id":"updating","dir":"Articles","previous_headings":"","what":"Updating","title":"Bayesian Networks Expanded","text":"Bayesian network can also updated adding removing arcs nodes. Adding removing arcs can change dependencies variables improve model’s accuracy. example, suppose learn Resource 1.3 longer risk delays. can remove arc Resource 1.3 Risk 1.1. following code removes arc Resource 1.3 Risk 1.1. can compare results updating Bayesian network. following code compares results updating Bayesian network.","code":"remove_links <- data.frame(   source = c(\"A\"),   target = c(\"H\"),   stringsAsFactors = FALSE ) update_distributions <- list(   H = list(     type = \"normal\",     mean = 3500,      sd = 1000     ) ) updated_graph <- prob_net_update(graph, remove_links = remove_links,                                    update_distributions = update_distributions) updated_results <- prob_net_sim(updated_graph, num_samples = 1000) hist <- hist(simulation_results$H, breaks = 50, plot = FALSE) hist2 <- hist(updated_results$H, breaks = 50, plot = FALSE) plot(hist, main = \"Regulatory Support Resource Cost\", xlab = \"Resource Cost\",       col = \"skyblue\", border = \"white\", ylim = c(0, max(hist$counts, hist2$counts))) plot(hist2, col = \"blue\", border = \"white\", add = TRUE) legend(\"topright\", legend = c(\"Before Update\", \"After Update\"),         fill = c(\"skyblue\", \"blue\"), bty = \"n\")"},{"path":"https://paulgovan.github.io/PRA/articles/network2.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Bayesian Networks Expanded","text":"vignette, used Bayesian Networks analyze project portfolio risks. defined projects, tasks, resources, risks simple project portfolio. defined Bayesian network represent dependencies variables. used probabilistic inference make inferences risks estimate total project cost. also learned updated Bayesian network new data improve model’s accuracy. Bayesian network provides powerful tool modeling project portfolio risks making informed decisions project outcomes.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/sigmoidal.html","id":"sigmoidal-functions-for-modeling-learning-curves","dir":"Articles","previous_headings":"","what":"Sigmoidal Functions for Modeling Learning Curves","title":"Learning Curves","text":"Sigmoidal functions, logistic function, often used model learning curves due characteristic S-shaped curve. shape captures three main phases learning: Initial Slow Improvement: beginning, rate improvement slow individuals teams just starting learn adapt. Rapid Improvement: basics understood, rate improvement accelerates significantly efficiency proficiency increase. Plateau: Eventually, rate improvement slows maximum potential efficiency approached. general form sigmoidal function (logistic function) : L(t)=Lmax1+e−k(t−t0) L(t) = \\frac{L_{\\max}}{1 + e^{-k(t - t_0)}} : L(t) learning outcome (e.g., efficiency, proficiency) time t Lmax maximum learning outcome (plateau). k growth rate, determining quickly learning improves. time learning outcome midpoint (point inflection).","code":""},{"path":"https://paulgovan.github.io/PRA/articles/sigmoidal.html","id":"applications-in-project-management","dir":"Articles","previous_headings":"","what":"Applications in Project Management","title":"Learning Curves","text":"Task Estimation: Using learning curves estimate time required future tasks based performance similar past tasks. Resource Allocation: Allocating resources efficiently understanding learning curve optimizing workforce deployment time. Training Programs: Designing training programs maximize rate learning minimize time reach optimal performance levels. Performance Monitoring: Continuously monitoring performance adjusting strategies ensure learning curve progresses expected.","code":""},{"path":"https://paulgovan.github.io/PRA/articles/sigmoidal.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Learning Curves","text":"First, load package: , set data frame time completion percentage data: Fit logistic model data: Use model predict future completion times: Plot results:","code":"library(PRA) data <- data.frame(time = 1:9, completion = c(5, 15, 40, 60, 70, 75, 80, 85, 90)) fit <- fit_sigmoidal(data, \"time\", \"completion\", \"logistic\") predictions <- predict_sigmoidal(fit, seq(min(data$time), max(data$time) + 1,   length.out = 100), \"logistic\") p <- ggplot2::ggplot(data, ggplot2::aes_string(x = \"time\", y = \"completion\")) +   ggplot2::geom_point() +   ggplot2::geom_line(data = predictions, ggplot2::aes(x = x, y = pred), color = \"red\") +   ggplot2::labs(title = \"Fitted Logistic Model\", x = \"time\", y = \"completion %\") +    ggplot2::theme_minimal() p"},{"path":"https://paulgovan.github.io/PRA/articles/sigmoidal.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Learning Curves","text":"Learning curves provide valuable insights performance improves experience, sigmoidal functions offer mathematical model describe predict improvements project management.","code":""},{"path":"https://paulgovan.github.io/PRA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Govan. Author, maintainer, copyright holder.","code":""},{"path":"https://paulgovan.github.io/PRA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Govan P (2024). PRA: Project Risk Analysis. doi:10.32614/CRAN.package.PRA, R package version 0.2, https://cran.r-project.org/package=PRA.","code":"@Manual{,   title = {PRA: Project Risk Analysis},   author = {Paul Govan},   year = {2024},   note = {R package version 0.2},   url = {https://cran.r-project.org/package=PRA},   doi = {10.32614/CRAN.package.PRA}, }"},{"path":[]},{"path":"https://paulgovan.github.io/PRA/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key features:","title":"Project Risk Analysis","text":"Second Moment Analysis Monte Carlo Simulation Contingency Analysis Sensitivity Analysis Earned Value Management Learning Curves Design Structure Matrices","code":""},{"path":"https://paulgovan.github.io/PRA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Project Risk Analysis","text":"install release verion PRA, use: can install development version PRA like :","code":"install_packages('PRA') devtools::install_github('paulgovan/PRA')"},{"path":"https://paulgovan.github.io/PRA/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Project Risk Analysis","text":"basic example shows solve common problem using Monte Carlo Simulation. First, load package: Next, set number simulations describe probability distributions 3 work packages: , set correlation matrix 3 work packages: Finally, run simulation using mcs function: calculate mean total duration: Mean Total Duration 38.56 calculate variance total duration: Variance around Total Duration 19.42 build histogram total duration:","code":"library(PRA) num_simulations <- 10000 task_distributions <- list(   list(type = \"normal\", mean = 10, sd = 2),  # Task A: Normal distribution   list(type = \"triangular\", a = 5, b = 10, c = 15),  # Task B: Triangular distribution   list(type = \"uniform\", min = 8, max = 12)  # Task C: Uniform distribution ) correlation_matrix <- matrix(c(   1, 0.5, 0.3,   0.5, 1, 0.4,   0.3, 0.4, 1 ), nrow = 3, byrow = TRUE) results <- mcs(num_simulations, task_distributions, correlation_matrix) cat(\"Mean Total Duration is \", round(results$total_mean, 2)) cat(\"Variance around the Total Duration is \", round(results$total_variance, 2)) hist(results$total_distribution, breaks = 50, main = \"Distribution of Total Project Duration\",       xlab = \"Total Duration\", col = \"skyblue\", border = \"white\")"},{"path":"https://paulgovan.github.io/PRA/index.html","id":"more-resources","dir":"","previous_headings":"","what":"More Resources","title":"Project Risk Analysis","text":"Much package based book Data Analysis Engineering Project Risk Managment Ivan Damnjanovic Ken Reinschmidt comes highly recommended.","code":""},{"path":"https://paulgovan.github.io/PRA/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Project Risk Analysis","text":"Please note PRA project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/ac.html","id":null,"dir":"Reference","previous_headings":"","what":"Actual Cost (AC). — ac","title":"Actual Cost (AC). — ac","text":"Actual Cost (AC).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/ac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Actual Cost (AC). — ac","text":"","code":"ac(actual_costs, time_period)"},{"path":"https://paulgovan.github.io/PRA/reference/ac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Actual Cost (AC). — ac","text":"actual_costs Vector actual costs incurred time period. time_period Current time period.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/ac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Actual Cost (AC). — ac","text":"function returns Actual Cost (AC) work completed.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/ac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Actual Cost (AC). — ac","text":"","code":"# Set the actual costs and current time period for a toy project. actual_costs <- c(9000, 18000, 36000, 70000, 100000) time_period <- 3  # Calculate the AC and print the results. ac <- ac(actual_costs, time_period) cat(\"Actual Cost (AC):\", ac, \"\\n\") #> Actual Cost (AC): 36000"},{"path":"https://paulgovan.github.io/PRA/reference/contingency.html","id":null,"dir":"Reference","previous_headings":"","what":"Contingency Calculation. — contingency","title":"Contingency Calculation. — contingency","text":"Contingency Calculation.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/contingency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contingency Calculation. — contingency","text":"","code":"contingency(sims, phigh = 0.95, pbase = 0.5)"},{"path":"https://paulgovan.github.io/PRA/reference/contingency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contingency Calculation. — contingency","text":"sims List results Monte Carlo simulation. phigh Percentile level contingency calculation. Default 0.95. pbase Base level contingency calculation. Default 0.5","code":""},{"path":"https://paulgovan.github.io/PRA/reference/contingency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contingency Calculation. — contingency","text":"function returns value calculated contingency.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/contingency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contingency Calculation. — contingency","text":"","code":"# Set the number os simulations and the task distributions for a toy project. num_sims <- 10000 task_dists <- list(   list(type = \"normal\", mean = 10, sd = 2),  # Task A: Normal distribution   list(type = \"triangular\", a = 5, b = 10, c = 15),  # Task B: Triangular distribution   list(type = \"uniform\", min = 8, max = 12)  # Task C: Uniform distribution )  # Set the correlation matrix for the correlations between tasks. cor_mat <- matrix(c(   1, 0.5, 0.3,   0.5, 1, 0.4,   0.3, 0.4, 1 ), nrow = 3, byrow = TRUE)  # Run the Monte Carlo simulation. results <- mcs(num_sims, task_dists, cor_mat)  # Calculate the contingency and print the results. contingency <- contingency(results, phigh = 0.95, pbase = 0.50) cat(\"Contingency based on 95th percentile and 50th percentile:\", contingency) #> Contingency based on 95th percentile and 50th percentile: 7.214802"},{"path":"https://paulgovan.github.io/PRA/reference/cor_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Correlation Matrix. — cor_matrix","title":"Generate Correlation Matrix. — cor_matrix","text":"Generate Correlation Matrix.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cor_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Correlation Matrix. — cor_matrix","text":"","code":"cor_matrix(num_samples = 100, num_vars = 5, dists = dists)"},{"path":"https://paulgovan.github.io/PRA/reference/cor_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Correlation Matrix. — cor_matrix","text":"num_samples number samples generate. num_vars number distributions sample. dists list describing distribution.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cor_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Correlation Matrix. — cor_matrix","text":"function returns correlation matrix distributions.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cor_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Correlation Matrix. — cor_matrix","text":"","code":"# List of probability distributions dists <- list(   normal = function(n) rnorm(n, mean = 0, sd = 1),   uniform = function(n) runif(n, min = 0, max = 1),   exponential = function(n) rexp(n, rate = 1),   poisson = function(n) rpois(n, lambda = 1),   binomial = function(n) rbinom(n, size = 10, prob = 0.5) )  # Generate correlation matrix cor_matrix <- cor_matrix(num_samples = 100, num_vars = 5, dists = dists)  # Print correlation matrix print(cor_matrix) #>               [,1]        [,2]        [,3]         [,4]          [,5] #> [1,]  1.000000e+00  0.16574655  0.07203118 -0.006606531  7.107618e-05 #> [2,]  1.657465e-01  1.00000000  0.12033562 -0.027319417  1.756293e-02 #> [3,]  7.203118e-02  0.12033562  1.00000000 -0.162796530 -1.028019e-02 #> [4,] -6.606531e-03 -0.02731942 -0.16279653  1.000000000 -1.483971e-01 #> [5,]  7.107618e-05  0.01756293 -0.01028019 -0.148397087  1.000000e+00"},{"path":"https://paulgovan.github.io/PRA/reference/cost_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Cost Probability Density. — cost_pdf","title":"Cost Probability Density. — cost_pdf","text":"Bayesian inference calculating random samples cost given risk event(s).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cost_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cost Probability Density. — cost_pdf","text":"","code":"cost_pdf(   num_sims,   risk_probs,   means_given_risks,   sds_given_risks,   base_cost = 0 )"},{"path":"https://paulgovan.github.io/PRA/reference/cost_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cost Probability Density. — cost_pdf","text":"num_sims Number random samples draw mixture model. risk_probs vector probabilities risk event 'R_i'. means_given_risks vector means normal distribution cost '' given risk event 'R_i'. sds_given_risks vector standard deviations normal distribution cost '' given risk event 'R_i'. base_cost baseline cost given risk event occurs.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cost_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cost Probability Density. — cost_pdf","text":"numeric vector random samples mixture model.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cost_pdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cost Probability Density. — cost_pdf","text":"","code":"# Example with three risk events num_sims <- 1000 risk_probs <- c(0.3, 0.5, 0.2) means_given_risks <- c(10000, 15000, 5000) sds_given_risks <- c(2000, 1000, 1000) base_cost <- 2000 samples <- cost_pdf(   num_sims = num_sims,   risk_probs = risk_probs,   means_given_risks = means_given_risks,   sds_given_risks = sds_given_risks,   base_cost = base_cost ) hist(samples, breaks = 30, col = \"skyblue\", main = \"Histogram of Cost\", xlab = \"Cost\")"},{"path":"https://paulgovan.github.io/PRA/reference/cost_post_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Cost Probability Density. — cost_post_pdf","title":"Posterior Cost Probability Density. — cost_post_pdf","text":"Calculates posterior probability density function costs given observations risk events.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cost_post_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Cost Probability Density. — cost_post_pdf","text":"","code":"cost_post_pdf(   num_sims,   observed_risks,   means_given_risks,   sds_given_risks,   base_cost = 0 )"},{"path":"https://paulgovan.github.io/PRA/reference/cost_post_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Cost Probability Density. — cost_post_pdf","text":"num_sims Number random samples draw posterior distribution. observed_risks vector observed values risk event 'R_i' (1 observed, 0 observed, NA unobserved). means_given_risks vector means normal distribution cost '' given risk event 'R_i'. sds_given_risks vector standard deviations normal distribution cost '' given risk event 'R_i'. base_cost baseline cost given risk event occurs.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cost_post_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Cost Probability Density. — cost_post_pdf","text":"numeric vector random samples posterior distribution costs.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cost_post_pdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Cost Probability Density. — cost_post_pdf","text":"","code":"# Example with three risk events num_sims <- 1000 observed_risks <- c(1, NA, 1) means_given_risks <- c(10000, 15000, 5000) sds_given_risks <- c(2000, 1000, 1000) base_cost <- 2000 posterior_samples <- cost_post_pdf(   num_sims = num_sims,   observed_risks = observed_risks,   means_given_risks = means_given_risks,   sds_given_risks = sds_given_risks,   base_cost = base_cost ) hist(posterior_samples, breaks = 30, col = \"skyblue\", main = \"Posterior Cost PDF\", xlab = \"Cost\")"},{"path":"https://paulgovan.github.io/PRA/reference/cpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Cost Performance Index (CPI). — cpi","title":"Cost Performance Index (CPI). — cpi","text":"Cost Performance Index (CPI).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cost Performance Index (CPI). — cpi","text":"","code":"cpi(ev, ac)"},{"path":"https://paulgovan.github.io/PRA/reference/cpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cost Performance Index (CPI). — cpi","text":"ev Earned Value. ac Actual Cost.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cost Performance Index (CPI). — cpi","text":"function returns Cost Performance Index (CPI) work completed.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cpi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cost Performance Index (CPI). — cpi","text":"","code":"# Set the BAC and actual % complete for an example project. bac <- 100000 actual_per_complete <- 0.35  # Calcualte the EV ev <- ev(bac, actual_per_complete)  # Set the actual costs and current time period and calculate the AC. actual_costs <- c(9000, 18000, 36000, 70000, 100000) time_period <- 3 ac <- ac(actual_costs, time_period)  # Calculate the CPI and print the results. cpi <- cpi(ev, ac) cat(\"Cost Performance Index (CPI):\", cpi, \"\\n\") #> Cost Performance Index (CPI): 0.9722222"},{"path":"https://paulgovan.github.io/PRA/reference/cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Cost Variance (CV). — cv","title":"Cost Variance (CV). — cv","text":"Cost Variance (CV).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cost Variance (CV). — cv","text":"","code":"cv(ev, ac)"},{"path":"https://paulgovan.github.io/PRA/reference/cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cost Variance (CV). — cv","text":"ev Earned Value. ac Actual Cost.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cost Variance (CV). — cv","text":"function returns Cost Variance (CV) work completed.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cost Variance (CV). — cv","text":"","code":"# Set the BAC and actual % complete for an example project. bac <- 100000 actual_per_complete <- 0.35  # Calcualte the EV ev <- ev(bac, actual_per_complete)  # Set the actual costs and current time period and calculate the AC. actual_costs <- c(9000, 18000, 36000, 70000, 100000) time_period <- 3 ac <- ac(actual_costs, time_period)  # Calculate the CV and print the results. cv <- cv(ev, ac) cat(\"Cost Variance (CV):\", cv, \"\\n\") #> Cost Variance (CV): -1000"},{"path":"https://paulgovan.github.io/PRA/reference/eac.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate at Completion (EAC). — eac","title":"Estimate at Completion (EAC). — eac","text":"Estimate Completion (EAC).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/eac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate at Completion (EAC). — eac","text":"","code":"eac(bac, cpi)"},{"path":"https://paulgovan.github.io/PRA/reference/eac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate at Completion (EAC). — eac","text":"bac Budget Completion (BAC) (total planned budget). cpi Cost Performance Index (CPI), efficiency cost utilization.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/eac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate at Completion (EAC). — eac","text":"function returns Estimate Completion (EAC).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/eac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate at Completion (EAC). — eac","text":"","code":"# Set the BAC and CPI for a toy project. bac <- 100000 cpi <- 0.83  # Calculate the EAC eac <- eac(bac, cpi) print(eac) #> [1] 120481.9"},{"path":"https://paulgovan.github.io/PRA/reference/ev.html","id":null,"dir":"Reference","previous_headings":"","what":"Earned Value (EV). — ev","title":"Earned Value (EV). — ev","text":"Earned Value (EV).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/ev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Earned Value (EV). — ev","text":"","code":"ev(bac, actual_per_complete)"},{"path":"https://paulgovan.github.io/PRA/reference/ev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Earned Value (EV). — ev","text":"bac Budget Completion (BAC) (total planned budget). actual_per_complete Actual work completion percentage.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/ev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Earned Value (EV). — ev","text":"function returns Earned Value (EV) work completed.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/ev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Earned Value (EV). — ev","text":"","code":"# Set the BAC and actual % complete for a toy project. bac <- 100000 actual_per_complete <- 0.35  # Calculate the EV and print the results. ev <- ev(bac, actual_per_complete) cat(\"Earned Value (EV):\", ev, \"\\n\") #> Earned Value (EV): 35000"},{"path":"https://paulgovan.github.io/PRA/reference/fit_sigmoidal.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Sigmoidal Model. — fit_sigmoidal","title":"Fit a Sigmoidal Model. — fit_sigmoidal","text":"Fit Sigmoidal Model.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/fit_sigmoidal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Sigmoidal Model. — fit_sigmoidal","text":"","code":"fit_sigmoidal(data, x_col, y_col, model_type)"},{"path":"https://paulgovan.github.io/PRA/reference/fit_sigmoidal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a Sigmoidal Model. — fit_sigmoidal","text":"data data frame containing time (x_col) completion (y_col) vectors. x_col name time vector. y_col name completion vector. model_type name sigmoidal model (Pearl, Gompertz, Logistic).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/fit_sigmoidal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Sigmoidal Model. — fit_sigmoidal","text":"function returns list results sigmoidal model.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/fit_sigmoidal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a Sigmoidal Model. — fit_sigmoidal","text":"","code":"# Set up a data frame of time and completion percentage data data <- data.frame(time = 1:10, completion = c(5, 15, 40, 60, 70, 75, 80, 85, 90, 95))  # Fit a logistic model to the data. fit <- fit_sigmoidal(data, \"time\", \"completion\", \"logistic\")  # Use the model to predict future completion times. predictions <- predict_sigmoidal(fit, seq(min(data$time), max(data$time),   length.out = 100), \"logistic\")  # Plot the results. p <- ggplot2::ggplot(data, ggplot2::aes_string(x = \"time\", y = \"completion\")) +   ggplot2::geom_point() +   ggplot2::geom_line(data = predictions, ggplot2::aes(x = x, y = pred), color = \"red\") +   ggplot2::labs(title = \"Fitted Logistic Model\", x = \"time\", y = \"completion %\") +   ggplot2::theme_minimal() #> Warning: `aes_string()` was deprecated in ggplot2 3.0.0. #> ℹ Please use tidy evaluation idioms with `aes()`. #> ℹ See also `vignette(\"ggplot2-in-packages\")` for more information. p"},{"path":"https://paulgovan.github.io/PRA/reference/grandparent_dsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Risk-based 'Grandparent' Design Structure Matrix (DSM). — grandparent_dsm","title":"Risk-based 'Grandparent' Design Structure Matrix (DSM). — grandparent_dsm","text":"Risk-based 'Grandparent' Design Structure Matrix (DSM).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/grandparent_dsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Risk-based 'Grandparent' Design Structure Matrix (DSM). — grandparent_dsm","text":"","code":"grandparent_dsm(S, R)"},{"path":"https://paulgovan.github.io/PRA/reference/grandparent_dsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Risk-based 'Grandparent' Design Structure Matrix (DSM). — grandparent_dsm","text":"S Resource-Task Matrix 'S' giving links (arcs) resources tasks. R Risk-Resource Matrix 'R' giving links (arcs) risks resources.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/grandparent_dsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Risk-based 'Grandparent' Design Structure Matrix (DSM). — grandparent_dsm","text":"function returns Risk-based 'Grandparent' DSM 'G' giving number risks shared task.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/grandparent_dsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Risk-based 'Grandparent' Design Structure Matrix (DSM). — grandparent_dsm","text":"","code":"# Set the S and R matrices and print the results. S <- matrix(c(1, 1, 0, 0, 1, 0, 0, 1, 1), nrow = 3, ncol = 3) R <- matrix(c(1, 1, 1, 1, 0, 0), nrow = 2, ncol = 3) cat(\"Resource-Task Matrix:\\n\") #> Resource-Task Matrix: print(S) #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    1    1    1 #> [3,]    0    0    1 cat(\"\\nRisk-Resource Matrix:\\n\") #>  #> Risk-Resource Matrix: print(R) #>      [,1] [,2] [,3] #> [1,]    1    1    0 #> [2,]    1    1    0 # Calculate the Risk-based Grandparent Matrix and print the results. risk_dsm <- grandparent_dsm(S, R) cat(\"\\nRisk-based 'Grandparent' DSM:\\n\") #>  #> Risk-based 'Grandparent' DSM: print(risk_dsm) #>      [,1] [,2] [,3] #> [1,]    2    4    0 #> [2,]    4    8    0 #> [3,]    0    0    0"},{"path":"https://paulgovan.github.io/PRA/reference/mcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Simulation. — mcs","title":"Monte Carlo Simulation. — mcs","text":"Monte Carlo Simulation.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/mcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Simulation. — mcs","text":"","code":"mcs(num_sims, task_dists, cor_mat = NULL)"},{"path":"https://paulgovan.github.io/PRA/reference/mcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Simulation. — mcs","text":"num_sims number simulations. task_dists list lists describing task distribution. cor_mat correlation matrix tasks (Optional).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/mcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Simulation. — mcs","text":"function returns list total mean, variance, standard deviation, percentiles project.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/mcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Simulation. — mcs","text":"","code":"# Set the number of simulations and task distributions for a toy project. num_sims <- 10000 task_dists <- list(   list(type = \"normal\", mean = 10, sd = 2),  # Task A: Normal distribution   list(type = \"triangular\", a = 5, b = 10, c = 15),  # Task B: Triangular distribution   list(type = \"uniform\", min = 8, max = 12)  # Task C: Uniform distribution )  # Set the correlation matrix for the correlations between tasks. cor_mat <- matrix(c(   1, 0.5, 0.3,   0.5, 1, 0.4,   0.3, 0.4, 1 ), nrow = 3, byrow = TRUE)  # Run the Monte Carlo sumulation and print the results. results <- mcs(num_sims, task_dists, cor_mat) cat(\"Mean Total Duration:\", results$total_mean, \"\\n\") #> Mean Total Duration: 38.55923  cat(\"Variance of Total Variance:\", results$total_variance, \"\\n\") #> Variance of Total Variance: 19.61062  cat(\"Standard Deviation of Total Duration:\", results$total_sd, \"\\n\") #> Standard Deviation of Total Duration: 4.428388  cat(\"5th Percentile:\", results$percentiles[1], \"\\n\") #> 5th Percentile: 31.34137  cat(\"Median (50th Percentile):\", results$percentiles[2], \"\\n\") #> Median (50th Percentile): 38.60316  cat(\"95th Percentile:\", results$percentiles[3], \"\\n\") #> 95th Percentile: 45.65592  hist(results$total_distribution, breaks = 50, main = \"Distribution of Total Project Duration\",   xlab = \"Total Duration\", col = \"skyblue\", border = \"white\")"},{"path":"https://paulgovan.github.io/PRA/reference/parent_dsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Resource-based 'Parent' Design Structure Matrix (DSM). — parent_dsm","title":"Resource-based 'Parent' Design Structure Matrix (DSM). — parent_dsm","text":"Resource-based 'Parent' Design Structure Matrix (DSM).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/parent_dsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resource-based 'Parent' Design Structure Matrix (DSM). — parent_dsm","text":"","code":"parent_dsm(S)"},{"path":"https://paulgovan.github.io/PRA/reference/parent_dsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resource-based 'Parent' Design Structure Matrix (DSM). — parent_dsm","text":"S Resource-Task Matrix 'S' giving links (arcs) resources tasks.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/parent_dsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resource-based 'Parent' Design Structure Matrix (DSM). — parent_dsm","text":"function returns Resource-based 'Parent' DSM 'P' giving number resources shared task.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/parent_dsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resource-based 'Parent' Design Structure Matrix (DSM). — parent_dsm","text":"","code":"# Set the S matrix for a toy project and print the results. s <- matrix(c(1, 1, 0, 0, 1, 0, 0, 1, 1), nrow = 3, ncol = 3) cat(\"Resource-Task Matrix:\\n\") #> Resource-Task Matrix: print(s) #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    1    1    1 #> [3,]    0    0    1  # Calculate the Resource-based Parent DSM and print the results. resource_dsm <- parent_dsm(s) cat(\"\\nResource-based 'Parent' DSM:\\n\") #>  #> Resource-based 'Parent' DSM: print(resource_dsm) #>      [,1] [,2] [,3] #> [1,]    1    1    0 #> [2,]    1    3    1 #> [3,]    0    1    1"},{"path":"https://paulgovan.github.io/PRA/reference/predict_sigmoidal.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict a Sigmoidal Function. — predict_sigmoidal","title":"Predict a Sigmoidal Function. — predict_sigmoidal","text":"Predict Sigmoidal Function.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/predict_sigmoidal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict a Sigmoidal Function. — predict_sigmoidal","text":"","code":"predict_sigmoidal(fit, x_range, model_type)"},{"path":"https://paulgovan.github.io/PRA/reference/predict_sigmoidal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict a Sigmoidal Function. — predict_sigmoidal","text":"fit list containing results sigmoidal model. x_range vector time values prediction. model_type type model (Pearl, Gompertz, Logistic) prediction.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/predict_sigmoidal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict a Sigmoidal Function. — predict_sigmoidal","text":"function returns table results containing time predicted values.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/predict_sigmoidal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict a Sigmoidal Function. — predict_sigmoidal","text":"","code":"# Set up a data frame of time and completion percentage data data <- data.frame(time = 1:10, completion = c(5, 15, 40, 60, 70, 75, 80, 85, 90, 95))  # Fit a logistic model to the data. fit <- fit_sigmoidal(data, \"time\", \"completion\", \"logistic\")  # Use the model to predict future completion times. predictions <- predict_sigmoidal(fit, seq(min(data$time), max(data$time),   length.out = 100), \"logistic\")  # Plot the results. p <- ggplot2::ggplot(data, ggplot2::aes_string(x = \"time\", y = \"completion\")) +   ggplot2::geom_point() +   ggplot2::geom_line(data = predictions, ggplot2::aes(x = x, y = pred), color = \"red\") +   ggplot2::labs(title = \"Fitted Logistic Model\", x = \"time\", y = \"completion %\") +   ggplot2::theme_minimal() p"},{"path":"https://paulgovan.github.io/PRA/reference/prob_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilistic Network of Project Risks. — prob_net","title":"Probabilistic Network of Project Risks. — prob_net","text":"function creates probabilistic network graph representation project risks supports discrete continuous probability distributions.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilistic Network of Project Risks. — prob_net","text":"","code":"prob_net(nodes, links, distributions = NULL)"},{"path":"https://paulgovan.github.io/PRA/reference/prob_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilistic Network of Project Risks. — prob_net","text":"nodes data frame containing nodes graph. Must include column `id` unique identifiers node. links data frame containing links graph. Must include columns `source` `target` specifying nodes form edge. distributions named list names correspond node IDs values specify discrete probabilities, continuous probability distributions, conditional distributions, aggregate distributions. - \"discrete\": Specifies `values` `probs`. - \"normal\": Specifies `mean` `sd`. - \"lognormal\": Specifies `meanlog` `sdlog`. - \"uniform\": Specifies `min` `max`. - \"conditional\": Specifies `condition` (discrete node) two distributions (`true_dist`, `false_dist`).   conditional distributions can discrete continuous. - \"aggregate\": Specifies `nodes` (list continuous node IDs sum).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilistic Network of Project Risks. — prob_net","text":"list : - `nodes`: input `nodes` data frame. - `links`: input `links` data frame. - `adjacency_matrix`: matrix representing connections nodes. - `distributions`: input `distributions` list.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probabilistic Network of Project Risks. — prob_net","text":"","code":"nodes <- data.frame(id = c(\"A\", \"B\", \"C\", \"D\")) links <- data.frame(source = c(\"A\", \"B\", \"C\"), target = c(\"B\", \"C\", \"D\")) distributions <- list(   A = list(type = \"discrete\", values = c(0, 1), probs = c(0.5, 0.5)),   B = list(type = \"normal\", mean = 0, sd = 1),   C = list(type = \"lognormal\", meanlog = 0, sdlog = 0.5),   D = list(type = \"uniform\", min = 1, max = 5),   E = list(type = \"conditional\", condition = \"A\",            true_dist = list(type = \"normal\", mean = 1, sd = 0.5),            false_dist = list(type = \"lognormal\", meanlog = -1, sdlog = 0.5)) ) graph <- prob_net(nodes, links, distributions = distributions)"},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_learn.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Bayesian Learning on a Probabilistic Network of Project Risks. — prob_net_learn","title":"Perform Bayesian Learning on a Probabilistic Network of Project Risks. — prob_net_learn","text":"function updates probabilistic network project risks observed values certain nodes performs inference generate posterior distributions unobserved nodes. function supports normal, uniform, lognormal, conditional continuous, conditional discrete, discrete, aggregate (summation) node types.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_learn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Bayesian Learning on a Probabilistic Network of Project Risks. — prob_net_learn","text":"","code":"prob_net_learn(network, observations = list(), num_samples = 1000)"},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_learn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Bayesian Learning on a Probabilistic Network of Project Risks. — prob_net_learn","text":"network prob_net object created `prob_net()`. observations named list names node IDs values observed values. num_samples Number samples simulate node (default 1000).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_learn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Bayesian Learning on a Probabilistic Network of Project Risks. — prob_net_learn","text":"data frame `num_samples` rows one column per node containing simulated posterior samples.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_learn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Bayesian Learning on a Probabilistic Network of Project Risks. — prob_net_learn","text":"Normal nodes sampled normal distribution using specified mean sd. Uniform nodes sampled uniform distribution specified min max values. Lognormal nodes sampled lognormal distribution specified meanlog sdlog. Conditional nodes depend discrete conditional node; condition TRUE (value = 1), node follows `true_dist`, otherwise follows `false_dist` (value = 0). Conditional distributions can normal, lognormal, uniform, discrete. Discrete nodes sampled using `sample()`, aggregate nodes computed sum values specified nodes. Observed nodes fixed given values.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_learn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Bayesian Learning on a Probabilistic Network of Project Risks. — prob_net_learn","text":"","code":"# Define nodes nodes <- data.frame(   id = c(\"A\", \"B\", \"C\", \"D\"),   label = c(\"Node A\", \"Node B\", \"Node C\", \"Node D\"),   stringsAsFactors = FALSE )  # Define links links <- data.frame(   source = c(\"A\", \"A\", \"B\", \"C\"),   target = c(\"B\", \"C\", \"D\", \"D\"),   weight = c(1, 2, 3, 4),   stringsAsFactors = FALSE )  # Define distributions for nodes distributions <- list(   A = list(type = \"discrete\", values = c(0, 1), probs = c(0.5, 0.5)),   B = list(type = \"normal\", mean = 2, sd = 0.5),   C = list(type = \"conditional\", condition = \"A\",            true_dist = list(type = \"normal\", mean = 1, sd = 0.5),            false_dist = list(type = \"discrete\", values = c(0, 1), probs = c(0.4, 0.6))),   D = list(type = \"aggregate\", nodes = c(\"B\", \"C\")) )  # Create the network graph graph <- prob_net(nodes, links, distributions = distributions)  # Perform Bayesian updating with observations observations <- list(A = 1) updated_results <- prob_net_learn(graph, observations, num_samples = 1000) head(updated_results) #>   A        B         C        D #> 1 1 2.902341 0.2902422 3.192583 #> 2 1 2.226350 0.7261965 2.952547 #> 3 1 1.786184 1.1850027 2.971187 #> 4 1 2.240081 0.4780507 2.718131 #> 5 1 1.353897 0.6481988 2.002096 #> 6 1 2.083298 0.6129808 2.696279"},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Inference on a Probabilistic Network of Project Risks. — prob_net_sim","title":"Perform Inference on a Probabilistic Network of Project Risks. — prob_net_sim","text":"function performs inference probabilistic network project risks simulating random samples distribution node. function supports normal, uniform, lognormal, discrete, conditional distributions, aggregate nodes sum values specified continuous nodes.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Inference on a Probabilistic Network of Project Risks. — prob_net_sim","text":"","code":"prob_net_sim(network, num_samples = 1000)"},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Inference on a Probabilistic Network of Project Risks. — prob_net_sim","text":"network prob_net object created `prob_net()`. num_samples Number samples simulate node (default 1000).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Inference on a Probabilistic Network of Project Risks. — prob_net_sim","text":"data frame `num_samples` rows one column per node containing simulated samples.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Inference on a Probabilistic Network of Project Risks. — prob_net_sim","text":"Aggregate nodes computed sum values specified continuous nodes. Conditional nodes depend discrete conditional node; condition true (value = 1), node follows `true_dist`, otherwise follows `false_dist` (value = 0). discrete distributions, sampling performed using `sample()`.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Inference on a Probabilistic Network of Project Risks. — prob_net_sim","text":"","code":"# Define nodes nodes <- data.frame(   id = c(\"A\", \"B\", \"C\", \"D\"),   label = c(\"Node A\", \"Node B\", \"Node C\", \"Node D\"),   stringsAsFactors = FALSE )  # Define links links <- data.frame(   source = c(\"A\", \"A\", \"B\", \"C\"),   target = c(\"B\", \"C\", \"D\", \"D\"),   weight = c(1, 2, 3, 4),   stringsAsFactors = FALSE )  # Define distributions for nodes distributions <- list(   A = list(type = \"discrete\", values = c(0, 1), probs = c(0.5, 0.5)),   B = list(type = \"normal\", mean = 2, sd = 0.5),   C = list(type = \"conditional\", condition = \"A\",            true_dist = list(type = \"normal\", mean = 1, sd = 0.5),            false_dist = list(type = \"lognormal\", meanlog = 0, sdlog = 0.2)),   D = list(type = \"aggregate\", nodes = c(\"B\", \"C\")) )  # Create the network graph graph <- prob_net(nodes, links, distributions = distributions)  # Perform inference (simulate 1000 samples) simulation_results <- prob_net_sim(graph, num_samples = 1000) head(simulation_results) #>   A        B         C        D #> 1 1 1.601315 0.8091387 2.410454 #> 2 0 2.640721 1.1514592 3.792181 #> 3 0 2.293165 0.6401644 2.933330 #> 4 0 2.785081 1.0640430 3.849124 #> 5 0 1.666340 0.9996170 2.665957 #> 6 0 1.392993 1.1028116 2.495804"},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Probabilistic Network of Project Risks. — prob_net_update","title":"Update a Probabilistic Network of Project Risks. — prob_net_update","text":"function updates existing probabilistic network adding removing dependencies (edges) updating probability distributions nodes.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Probabilistic Network of Project Risks. — prob_net_update","text":"","code":"prob_net_update(   graph,   add_links = NULL,   remove_links = NULL,   update_distributions = NULL )"},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Probabilistic Network of Project Risks. — prob_net_update","text":"graph existing probabilistic network created `prob_net()`. add_links Optional. data frame columns `source` `target` add new links. remove_links Optional. data frame columns `source` `target` remove existing links. update_distributions Optional. named list distributions update. Format follows `prob_net()`.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/prob_net_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a Probabilistic Network of Project Risks. — prob_net_update","text":"updated `prob_net` object modified links /distributions.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/pv.html","id":null,"dir":"Reference","previous_headings":"","what":"Planned Value (PV). — pv","title":"Planned Value (PV). — pv","text":"Planned Value (PV).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/pv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Planned Value (PV). — pv","text":"","code":"pv(bac, schedule, time_period)"},{"path":"https://paulgovan.github.io/PRA/reference/pv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Planned Value (PV). — pv","text":"bac Budget Completion (BAC) (total planned budget). schedule Vector planned work completion (terms percentage) time period. time_period Current time period.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/pv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Planned Value (PV). — pv","text":"function returns Planned Value (PV) work completed.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/pv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Planned Value (PV). — pv","text":"","code":"# Set the BAC, schedule, and current time period for a toy project. bac <- 100000 schedule <- c(0.1, 0.2, 0.4, 0.7, 1.0) time_period <- 3  # Calculate the PV and print the results. pv <- pv(bac, schedule, time_period) cat(\"Planned Value (PV):\", pv, \"\\n\") #> Planned Value (PV): 40000"},{"path":"https://paulgovan.github.io/PRA/reference/risk_post_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Risk Probability. — risk_post_prob","title":"Posterior Risk Probability. — risk_post_prob","text":"Calculates posterior probability risk event given observations root causes.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/risk_post_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Risk Probability. — risk_post_prob","text":"","code":"risk_post_prob(   cause_probs,   risks_given_causes,   risks_given_not_causes,   observed_causes )"},{"path":"https://paulgovan.github.io/PRA/reference/risk_post_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Risk Probability. — risk_post_prob","text":"cause_probs vector prior probabilities root cause 'C_i'. risks_given_causes vector conditional probabilities risk event 'R' given cause 'C_i'. risks_given_not_causes vector conditional probabilities risk event 'R' given cause 'C_i'. observed_causes vector observed values cause 'C_i' (1 observed, 0 observed, NA unobserved).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/risk_post_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Risk Probability. — risk_post_prob","text":"numeric value posterior probability risk event given observed causes.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/risk_post_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Risk Probability. — risk_post_prob","text":"","code":"cause_probs <- c(0.3, 0.2) risks_given_causes <- c(0.8, 0.6) risks_given_not_causes <- c(0.2, 0.4) observed_causes <- c(1, NA) risk_post_prob <- risk_post_prob(cause_probs, risks_given_causes,   risks_given_not_causes, observed_causes) print(risk_post_prob) #> [1] 0.6315789"},{"path":"https://paulgovan.github.io/PRA/reference/risk_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Inference for Risk Probability. — risk_prob","title":"Bayesian Inference for Risk Probability. — risk_prob","text":"Bayesian inference calculating risk probability given root cause(s).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/risk_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Inference for Risk Probability. — risk_prob","text":"","code":"risk_prob(cause_probs, risks_given_causes, risks_given_not_causes)"},{"path":"https://paulgovan.github.io/PRA/reference/risk_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Inference for Risk Probability. — risk_prob","text":"cause_probs vector probabilities root cause 'C_i'. risks_given_causes vector conditional probabilities risk event 'R' given cause 'C_i'. risks_given_not_causes vector conditional probabilities risk event 'R' given cause 'C_i'.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/risk_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Inference for Risk Probability. — risk_prob","text":"function returns numeric value probability risk event 'R'.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/risk_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Inference for Risk Probability. — risk_prob","text":"","code":"cause_probs <- c(0.3, 0.2) risks_given_causes <- c(0.8, 0.6) risks_given_not_causes <- c(0.2, 0.4) risk_prob_value <- risk_prob(cause_probs, risks_given_causes, risks_given_not_causes) print(risk_prob_value) #> [1] 0.82"},{"path":"https://paulgovan.github.io/PRA/reference/sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity Analysis. — sensitivity","title":"Sensitivity Analysis. — sensitivity","text":"Sensitivity Analysis.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity Analysis. — sensitivity","text":"","code":"sensitivity(task_dists, cor_mat = NULL)"},{"path":"https://paulgovan.github.io/PRA/reference/sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity Analysis. — sensitivity","text":"task_dists list lists describing task distribution. cor_mat correlation matrix tasks (Optional).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity Analysis. — sensitivity","text":"function returns vector sensitivity results respect task.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/sensitivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sensitivity Analysis. — sensitivity","text":"","code":"# Set the task distributions for a toy project. task_dists <- list(   list(type = \"normal\", mean = 10, sd = 2),  # Task A: Normal distribution   list(type = \"triangular\", a = 5, b = 15, c = 10),  # Task B: Triangular distribution   list(type = \"uniform\", min = 8, max = 12)  # Task C: Uniform distribution )  # Set the correlation matrix between the tasks. cor_mat <- matrix(c(   1, 0.5, 0.3,  0.5, 1, 0.4,   0.3, 0.4, 1 ), nrow = 3, byrow = TRUE)  # Calculate the sensitivity of each task and print the results sensitivity_results <- sensitivity(task_dists, cor_mat) cat(\"Sensitivity of the variance in total cost with respect to the variance in each task cost:\\n\") #> Sensitivity of the variance in total cost with respect to the variance in each task cost: print(sensitivity_results) #> [1] 2.6 2.8 2.4  # Build a vertical barchart and display the results. data <- data.frame(   Tasks = c('A', 'B', 'C'),   Sensitivity = sensitivity_results ) barplot(height=data$Sensitivity, names=data$Tasks, col='skyblue',         horiz=TRUE, xlab = 'Sensitivity', ylab = 'Tasks')"},{"path":"https://paulgovan.github.io/PRA/reference/smm.html","id":null,"dir":"Reference","previous_headings":"","what":"Second Moment Analysis. — smm","title":"Second Moment Analysis. — smm","text":"Second Moment Analysis.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/smm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second Moment Analysis. — smm","text":"","code":"smm(mean, var, cor_mat = NULL)"},{"path":"https://paulgovan.github.io/PRA/reference/smm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second Moment Analysis. — smm","text":"mean mean vector. var variance vector. cor_mat correlation matrix (optional).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/smm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second Moment Analysis. — smm","text":"function returns list total mean, variance, standard deviation project.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/smm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Second Moment Analysis. — smm","text":"","code":"# Set the mean vector, variance vector, and correlation matrix for a toy project. mean <- c(10, 15, 20) var <- c(4, 9, 16) cor_mat <- matrix(c(   1, 0.5, 0.3,   0.5, 1, 0.4,   0.3, 0.4, 1 ), nrow = 3, byrow = TRUE)  # Use the Second Moment Method to estimate the results for the project. result <- smm(mean, var, cor_mat) print(result) #> $total_mean #> [1] 45 #>  #> $total_var #> [1] 49.4 #>  #> $total_std #> [1] 7.028513 #>"},{"path":"https://paulgovan.github.io/PRA/reference/spi.html","id":null,"dir":"Reference","previous_headings":"","what":"Schedule Performance Index (SPI). — spi","title":"Schedule Performance Index (SPI). — spi","text":"Schedule Performance Index (SPI).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/spi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schedule Performance Index (SPI). — spi","text":"","code":"spi(ev, pv)"},{"path":"https://paulgovan.github.io/PRA/reference/spi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schedule Performance Index (SPI). — spi","text":"ev Earned Value. pv Planned Value.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/spi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Schedule Performance Index (SPI). — spi","text":"function returns Schedule Performance Index (SPI) work completed.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/spi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Schedule Performance Index (SPI). — spi","text":"","code":"# Set the BAC, schedule, and current time period for an example project. bac <- 100000 schedule <- c(0.1, 0.2, 0.4, 0.7, 1.0) time_period <- 3  # Calculate the PV. pv <- pv(bac, schedule, time_period)  # Set the actual % complete and calculate the EV. actual_per_complete <- 0.35 ev <- ev(bac, actual_per_complete)  # Calculate the SPI and print the results. spi <- spi(ev, pv) cat(\"Schedule Performance Index (SPI):\", spi, \"\\n\") #> Schedule Performance Index (SPI): 0.875"},{"path":"https://paulgovan.github.io/PRA/reference/sv.html","id":null,"dir":"Reference","previous_headings":"","what":"Schedule Variance (SV). — sv","title":"Schedule Variance (SV). — sv","text":"Schedule Variance (SV).","code":""},{"path":"https://paulgovan.github.io/PRA/reference/sv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schedule Variance (SV). — sv","text":"","code":"sv(ev, pv)"},{"path":"https://paulgovan.github.io/PRA/reference/sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schedule Variance (SV). — sv","text":"ev Earned Value. pv Planned Value.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/sv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Schedule Variance (SV). — sv","text":"function returns Schedule Variance (SV) work completed.","code":""},{"path":"https://paulgovan.github.io/PRA/reference/sv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Schedule Variance (SV). — sv","text":"","code":"# Set the BAC, schedule, and current time period for an example project. bac <- 100000 schedule <- c(0.1, 0.2, 0.4, 0.7, 1.0) time_period <- 3  # Calculate the PV. pv <- pv(bac, schedule, time_period)  # Set the actual % complete and calculate the EV. actual_per_complete <- 0.35 ev <- ev(bac, actual_per_complete)  # Calculate the SV and print the results. sv <- sv(ev, pv) cat(\"Schedule Variance (SV):\", sv, \"\\n\") #> Schedule Variance (SV): -5000"},{"path":"https://paulgovan.github.io/PRA/news/index.html","id":"pra-030","dir":"Changelog","previous_headings":"","what":"PRA 0.3.0","title":"PRA 0.3.0","text":"CRAN release: 2024-08-20 Includes new vignettes several PRA methods. New helper function estimating correlation matrix set variables. Minor updates bug fixes.","code":""},{"path":"https://paulgovan.github.io/PRA/news/index.html","id":"pra-020","dir":"Changelog","previous_headings":"","what":"PRA 0.2.0","title":"PRA 0.2.0","text":"CRAN release: 2024-07-02 Minor updates bug fixes.","code":""},{"path":"https://paulgovan.github.io/PRA/news/index.html","id":"pra-010","dir":"Changelog","previous_headings":"","what":"PRA 0.1.0","title":"PRA 0.1.0","text":"Initial CRAN submission.","code":""}]
